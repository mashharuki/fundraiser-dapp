{
  "contractName": "SignatureDecoder",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.pm>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SignatureDecoder - Decodes signatures that a encoded as bytes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"SignatureDecoder\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/safeContracts/common/SignatureDecoder.sol\":\"SignatureDecoder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/safeContracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x29749a6af19badf276a75f7f47187e106071a391c1c7abfe6f564a9a9410b184\",\"urls\":[\"bzz-raw://5e9fe60a59396b1883ac96223c89c36a5693035bddcfcb2b3ac95d2d9e27f432\",\"dweb:/ipfs/QmQFXCgrHRH8LBYr2JozQwHrZvitdeqAtRQdqrXpjSC5Ax\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122009fe0d75b1f35762b670a6beab8fc1e1ba9f614b071b8b33d7a606f7099fa02464736f6c63430008000033",
  "deployedBytecode": "0x6080604052600080fdfea264697066735822122009fe0d75b1f35762b670a6beab8fc1e1ba9f614b071b8b33d7a606f7099fa02464736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "268:1374:23:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "268:1374:23:-:0;;;;;",
  "source": "/**\n * 署名データをデコードするコントラクト\n */\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * SignatureDecoderコントラクト\n * @title SignatureDecoder - Decodes signatures that a encoded as bytes\n * @author Richard Meissner - <richard@gnosis.pm>\n */\ncontract SignatureDecoder {\n\n    /**\n     * 署名データを3要素に区切るための関数\n     * @dev divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\n     * @notice Make sure to perform a bounds check for @param pos, to avoid out of bounds access on @param signatures\n     * @param pos which signature to read. A prior bounds check of this parameter should be performed, to avoid out of bounds access\n     * @param signatures concatenated rsv signatures\n     */\n    function signatureSplit(bytes memory signatures, uint256 pos) internal pure returns (uint8 v, bytes32 r, bytes32 s) {\n        // The signature format is a compact form of:\n        //   {bytes32 r}{bytes32 s}{uint8 v}\n        // Compact means, uint8 is not padded to 32 bytes.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let signaturePos := mul(0x41, pos)\n            r := mload(add(signatures, add(signaturePos, 0x20)))\n            s := mload(add(signatures, add(signaturePos, 0x40)))\n            // Here we are loading the last 32 bytes, including 31 bytes\n            // of 's'. There is no 'mload8' to do this.\n            //\n            // 'byte' is not working due to the Solidity parser, so lets\n            // use the second best option, 'and'\n            v := and(mload(add(signatures, add(signaturePos, 0x41))), 0xff)\n        }\n    }\n}\n",
  "sourcePath": "/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/safeContracts/common/SignatureDecoder.sol",
  "ast": {
    "absolutePath": "/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/safeContracts/common/SignatureDecoder.sol",
    "exportedSymbols": {
      "SignatureDecoder": [
        4395
      ]
    },
    "id": 4396,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4377,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:31:23"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4378,
          "nodeType": "StructuredDocumentation",
          "src": "100:167:23",
          "text": " SignatureDecoderコントラクト\n @title SignatureDecoder - Decodes signatures that a encoded as bytes\n @author Richard Meissner - <richard@gnosis.pm>"
        },
        "fullyImplemented": true,
        "id": 4395,
        "linearizedBaseContracts": [
          4395
        ],
        "name": "SignatureDecoder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4393,
              "nodeType": "Block",
              "src": "871:769:23",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1104:530:23",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1118:34:23",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1142:4:23",
                              "type": "",
                              "value": "0x41"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1148:3:23"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "1138:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1138:14:23"
                        },
                        "variables": [
                          {
                            "name": "signaturePos",
                            "nodeType": "YulTypedName",
                            "src": "1122:12:23",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1165:52:23",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signatures",
                                  "nodeType": "YulIdentifier",
                                  "src": "1180:10:23"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "signaturePos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1196:12:23"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1210:4:23",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1192:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1192:23:23"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1176:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1176:40:23"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1170:5:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1170:47:23"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "1165:1:23"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1230:52:23",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signatures",
                                  "nodeType": "YulIdentifier",
                                  "src": "1245:10:23"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "signaturePos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1261:12:23"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1275:4:23",
                                      "type": "",
                                      "value": "0x40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1257:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1257:23:23"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1241:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1241:40:23"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1235:5:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1235:47:23"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "1230:1:23"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1561:63:23",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "signatures",
                                      "nodeType": "YulIdentifier",
                                      "src": "1580:10:23"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "signaturePos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1596:12:23"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1610:4:23",
                                          "type": "",
                                          "value": "0x41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1592:3:23"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1592:23:23"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1576:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1576:40:23"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1570:5:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1570:47:23"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:4:23",
                              "type": "",
                              "value": "0xff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1566:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1566:58:23"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "1561:1:23"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4383,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1148:3:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1165:1:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4390,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1230:1:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4381,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1180:10:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4381,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1245:10:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4381,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1580:10:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1561:1:23",
                      "valueSize": 1
                    }
                  ],
                  "id": 4392,
                  "nodeType": "InlineAssembly",
                  "src": "1095:539:23"
                }
              ]
            },
            "documentation": {
              "id": 4379,
              "nodeType": "StructuredDocumentation",
              "src": "301:449:23",
              "text": " 署名データを3要素に区切るための関数\n @dev divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\n @notice Make sure to perform a bounds check for @param pos, to avoid out of bounds access on @param signatures\n @param pos which signature to read. A prior bounds check of this parameter should be performed, to avoid out of bounds access\n @param signatures concatenated rsv signatures"
            },
            "id": 4394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signatureSplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4381,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "779:23:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4380,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4383,
                  "mutability": "mutable",
                  "name": "pos",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "804:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "778:38:23"
            },
            "returnParameters": {
              "id": 4391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4386,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "840:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4385,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4388,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "849:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4387,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4390,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "860:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4389,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "839:31:23"
            },
            "scope": 4395,
            "src": "755:885:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4396,
        "src": "268:1374:23"
      }
    ],
    "src": "67:1576:23"
  },
  "legacyAST": {
    "absolutePath": "/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/safeContracts/common/SignatureDecoder.sol",
    "exportedSymbols": {
      "SignatureDecoder": [
        4395
      ]
    },
    "id": 4396,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4377,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:31:23"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4378,
          "nodeType": "StructuredDocumentation",
          "src": "100:167:23",
          "text": " SignatureDecoderコントラクト\n @title SignatureDecoder - Decodes signatures that a encoded as bytes\n @author Richard Meissner - <richard@gnosis.pm>"
        },
        "fullyImplemented": true,
        "id": 4395,
        "linearizedBaseContracts": [
          4395
        ],
        "name": "SignatureDecoder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4393,
              "nodeType": "Block",
              "src": "871:769:23",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1104:530:23",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1118:34:23",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1142:4:23",
                              "type": "",
                              "value": "0x41"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1148:3:23"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "1138:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1138:14:23"
                        },
                        "variables": [
                          {
                            "name": "signaturePos",
                            "nodeType": "YulTypedName",
                            "src": "1122:12:23",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1165:52:23",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signatures",
                                  "nodeType": "YulIdentifier",
                                  "src": "1180:10:23"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "signaturePos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1196:12:23"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1210:4:23",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1192:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1192:23:23"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1176:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1176:40:23"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1170:5:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1170:47:23"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "1165:1:23"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1230:52:23",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "signatures",
                                  "nodeType": "YulIdentifier",
                                  "src": "1245:10:23"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "signaturePos",
                                      "nodeType": "YulIdentifier",
                                      "src": "1261:12:23"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1275:4:23",
                                      "type": "",
                                      "value": "0x40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1257:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1257:23:23"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1241:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1241:40:23"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1235:5:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1235:47:23"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "1230:1:23"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1561:63:23",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "signatures",
                                      "nodeType": "YulIdentifier",
                                      "src": "1580:10:23"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "signaturePos",
                                          "nodeType": "YulIdentifier",
                                          "src": "1596:12:23"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1610:4:23",
                                          "type": "",
                                          "value": "0x41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1592:3:23"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1592:23:23"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1576:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1576:40:23"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1570:5:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1570:47:23"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:4:23",
                              "type": "",
                              "value": "0xff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1566:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1566:58:23"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "1561:1:23"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4383,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1148:3:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4388,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1165:1:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4390,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1230:1:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4381,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1180:10:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4381,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1245:10:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4381,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1580:10:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1561:1:23",
                      "valueSize": 1
                    }
                  ],
                  "id": 4392,
                  "nodeType": "InlineAssembly",
                  "src": "1095:539:23"
                }
              ]
            },
            "documentation": {
              "id": 4379,
              "nodeType": "StructuredDocumentation",
              "src": "301:449:23",
              "text": " 署名データを3要素に区切るための関数\n @dev divides bytes signature into `uint8 v, bytes32 r, bytes32 s`.\n @notice Make sure to perform a bounds check for @param pos, to avoid out of bounds access on @param signatures\n @param pos which signature to read. A prior bounds check of this parameter should be performed, to avoid out of bounds access\n @param signatures concatenated rsv signatures"
            },
            "id": 4394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signatureSplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4381,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "779:23:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4380,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4383,
                  "mutability": "mutable",
                  "name": "pos",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "804:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "778:38:23"
            },
            "returnParameters": {
              "id": 4391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4386,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "840:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4385,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4388,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "849:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4387,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4390,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 4394,
                  "src": "860:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4389,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "839:31:23"
            },
            "scope": 4395,
            "src": "755:885:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4396,
        "src": "268:1374:23"
      }
    ],
    "src": "67:1576:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2022-06-04T12:56:34.327Z",
  "devdoc": {
    "author": "Richard Meissner - <richard@gnosis.pm>",
    "kind": "dev",
    "methods": {},
    "title": "SignatureDecoder - Decodes signatures that a encoded as bytes",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "SignatureDecoderコントラクト",
    "version": 1
  }
}