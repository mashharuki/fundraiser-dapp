{
  "contractName": "NFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "url_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNftName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNftSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNftURL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenName_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenUrl_",
          "type": "string"
        }
      ],
      "name": "mintNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getMetaData",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getMetaData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNftName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNftSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNftURL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenUrl_\",\"type\":\"string\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getMetaData(uint256)\":{\"params\":{\"tokenId\":\"\\u30c8\\u30fc\\u30af\\u30f3ID\"},\"returns\":{\"_0\":\"bytesMetadata \\u30e1\\u30bf\\u30c7\\u30fc\\u30bf\\u3092\\u683c\\u7d0d\\u3057\\u305fJSON\\u30aa\\u30d6\\u30b8\\u30a7\\u30af\\u30c8\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"mintNft(address,string,string,string)\":{\"params\":{\"description_\":\"\\u8aac\\u660e\",\"to\":\"\\u767a\\u884c\\u5148\\u30a2\\u30c9\\u30ec\\u30b9\",\"tokenName_\":\"\\u30c8\\u30fc\\u30af\\u30f3ID\\u306b\\u5272\\u308a\\u632f\\u3089\\u308c\\u308b\\u540d\\u524d\",\"tokenUrl_\":\"\\u30c8\\u30fc\\u30af\\u30f3ID\\u306b\\u7d10\\u3065\\u3051\\u308bURL\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"\\u30b3\\u30f3\\u30b9\\u30c8\\u30e9\\u30af\\u30bf\\u30fc \"},\"getMetaData(uint256)\":{\"notice\":\"\\u30c8\\u30fc\\u30af\\u30f3ID\\u306b\\u7d10\\u3065\\u304f\\u30e1\\u30bf\\u30c7\\u30fc\\u30bf\\u3092\\u53d6\\u5f97\\u3059\\u308b\\u95a2\\u6570\"},\"getNftName()\":{\"notice\":\"NFT\\u540d\\u3092\\u53d6\\u5f97\\u3059\\u308b\\u95a2\\u6570\"},\"getNftSymbol()\":{\"notice\":\"\\u30b7\\u30f3\\u30dc\\u30eb\\u540d\\u3092\\u53d6\\u5f97\\u3059\\u308b\\u95a2\\u6570\"},\"getNftURL()\":{\"notice\":\"NFT\\u306b\\u7d10\\u3065\\u3051\\u3089\\u308c\\u3066\\u3044\\u308bURL\\u3092\\u53d6\\u5f97\\u3059\\u308b\\u3002\"},\"mintNft(address,string,string,string)\":{\"notice\":\"\\u30a2\\u30c9\\u30ec\\u30b9\\u306b\\u5bfe\\u3057\\u3066NFT\\u3092\\u767a\\u884c\\u3059\\u308b\\u95a2\\u6570\"}},\"notice\":\"NFT\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u3092\\u5b9a\\u7fa9\\u3059\\u308b\\u3002 (ERC721PresetMinterPauserAutoId\\u3092\\u7d99\\u627f\\u3057\\u3066\\u5b9f\\u88c5)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/NFT.sol\":\"NFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/NFT.sol\":{\"keccak256\":\"0x4009c17a6201a8d3679e73fdb4b7722607e9dcc04b6ad0e61e701967f406b9c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e34bcd545c4e509d3c020b2486ce56038c6ac9eb8e8a3033a94ffbb4a56640c\",\"dweb:/ipfs/QmeYfZzcfYZDLcmuHXHTPJgQSqAACp7yqqDzA21pk8BPBK\"]},\"/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/common/Base64.sol\":{\"keccak256\":\"0x58e83064002dba0a341ba0f886bb0d00b05044bc813b95f257de90b8525f4956\",\"urls\":[\"bzz-raw://09452ab539a1bb650e887c96be276ee4cb49c8ac30f698f9e628a0a73925bab5\",\"dweb:/ipfs/QmeMjMyeCWuauHttFTCnMhZzAo1okia8PRGmf4rmKRwHUC\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x1f16f9737853b988865ab819d1ebf8b5009defe981c75bc9079e0f40ed2a2e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e50f827969ca93b0d7bad1e022aa3147c8f390e9f91bb814752e8fbbbe621c\",\"dweb:/ipfs/QmdR2fJ2a3HM7FyC9pGD4JeKF9z6bxqU9FbhMyQfH1sDJH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xa2695a4c7b192f34b98a3875dfce54c8c6c4976b898a5598b1ce0355ce2e6c56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a9eed1168b7794c22eb3ef76ac6d8c523cfb453c5113e3314781dadb5d0de4b\",\"dweb:/ipfs/QmcoTzSK56c3tUN9zsD66YpTjoxguuo76BdrDs5ZSSaJMp\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol\":{\"keccak256\":\"0x822a4420f766705ec686cf6cc846020fbd89a6859f07752f3b74e9a76734bd0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01805f247e9679cdd86db4b773e44dcc586129725b3b1264c83e881560834cc8\",\"dweb:/ipfs/QmXspkGihwo64qZbXatUUPo2jHrcx1tNnCuuivNrtUZzGi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200367a3803806200367a83398101604081905262000034916200042e565b8282828282816002908051906020019062000051929190620002dd565b50805162000067906003906020840190620002dd565b5050600c805460ff191690555080516200008990600e906020840190620002dd565b50620000a060006200009a6200014c565b62000150565b620000cf7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66200009a6200014c565b620000fe7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6200009a6200014c565b50508351620001169150600f906020860190620002dd565b5081516200012c906010906020850190620002dd565b50805162000142906011906020840190620002dd565b505050506200050e565b3390565b6200015c828262000160565b5050565b620001778282620001a360201b62000f5b1760201c565b60008281526001602090815260409091206200019e91839062000fe06200022d821b17901c565b505050565b620001af82826200024d565b6200015c576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001e96200014c565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000244836001600160a01b03841662000276565b90505b92915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000620002848383620002c5565b620002bc5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000247565b50600062000247565b60009081526001919091016020526040902054151590565b828054620002eb90620004bb565b90600052602060002090601f0160209004810192826200030f57600085556200035a565b82601f106200032a57805160ff19168380011785556200035a565b828001600101855582156200035a579182015b828111156200035a5782518255916020019190600101906200033d565b50620003689291506200036c565b5090565b5b808211156200036857600081556001016200036d565b600082601f83011262000394578081fd5b81516001600160401b0380821115620003b157620003b1620004f8565b6040516020601f8401601f1916820181018381118382101715620003d957620003d9620004f8565b6040528382528584018101871015620003f0578485fd5b8492505b83831015620004135785830181015182840182015291820191620003f4565b838311156200042457848185840101525b5095945050505050565b60008060006060848603121562000443578283fd5b83516001600160401b03808211156200045a578485fd5b620004688783880162000383565b945060208601519150808211156200047e578384fd5b6200048c8783880162000383565b93506040860151915080821115620004a2578283fd5b50620004b18682870162000383565b9150509250925092565b600281046001821680620004d057607f821691505b60208210811415620004f257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61315c806200051e6000396000f3fe60806040526004361061020f5760003560e01c80636352211e11610118578063b722720d116100a0578063d53913931161006f578063d5391393146105c3578063d547741f146105d8578063e63ab1e9146105f8578063e985e9c51461060d578063f7b5c5b61461062d5761020f565b8063b722720d1461054e578063b88d4fde14610563578063c87b56dd14610583578063ca15c873146105a35761020f565b80639010d07c116100e75780639010d07c146104c457806391d14854146104e457806395d89b4114610504578063a217fddf14610519578063a22cb4651461052e5761020f565b80636352211e1461044f5780636a6278421461046f57806370a082311461048f5780638456cb59146104af5761020f565b80632f745c591161019b57806342842e0e1161016a57806342842e0e146103ba57806342966c68146103da5780634f6ccce7146103fa5780635c975abb1461041a57806361eba5521461042f5761020f565b80632f745c591461035057806336568abe146103705780633bbdbee0146103905780633f4ba83a146103a55761020f565b806311ece751116101e257806311ece751146102bb57806318160ddd146102ce57806323b872dd146102f0578063248a9ca3146103105780632f2ff15d146103305761020f565b806301ffc9a71461021457806306fdde031461024a578063081812fc1461026c578063095ea7b314610299575b600080fd5b34801561022057600080fd5b5061023461022f3660046124f7565b610642565b6040516102419190612810565b60405180910390f35b34801561025657600080fd5b5061025f610655565b6040516102419190612824565b34801561027857600080fd5b5061028c61028736600461249c565b6106e7565b60405161024191906127bf565b3480156102a557600080fd5b506102b96102b4366004612473565b610733565b005b6102b96102c93660046123ea565b6107cb565b3480156102da57600080fd5b506102e36108a6565b604051610241919061281b565b3480156102fc57600080fd5b506102b961030b3660046122fc565b6108ac565b34801561031c57600080fd5b506102e361032b36600461249c565b6108e4565b34801561033c57600080fd5b506102b961034b3660046124b4565b6108f9565b34801561035c57600080fd5b506102e361036b366004612473565b61091d565b34801561037c57600080fd5b506102b961038b3660046124b4565b610972565b34801561039c57600080fd5b5061025f6109b8565b3480156103b157600080fd5b506102b96109c7565b3480156103c657600080fd5b506102b96103d53660046122fc565b610a19565b3480156103e657600080fd5b506102b96103f536600461249c565b610a34565b34801561040657600080fd5b506102e361041536600461249c565b610a67565b34801561042657600080fd5b50610234610ac2565b34801561043b57600080fd5b5061025f61044a36600461249c565b610acb565b34801561045b57600080fd5b5061028c61046a36600461249c565b610c3a565b34801561047b57600080fd5b506102b961048a3660046122b0565b610c6f565b34801561049b57600080fd5b506102e36104aa3660046122b0565b610cd4565b3480156104bb57600080fd5b506102b9610d18565b3480156104d057600080fd5b5061028c6104df3660046124d6565b610d68565b3480156104f057600080fd5b506102346104ff3660046124b4565b610d87565b34801561051057600080fd5b5061025f610db0565b34801561052557600080fd5b506102e3610dbf565b34801561053a57600080fd5b506102b96105493660046123b0565b610dc4565b34801561055a57600080fd5b5061025f610dd6565b34801561056f57600080fd5b506102b961057e366004612337565b610de5565b34801561058f57600080fd5b5061025f61059e36600461249c565b610e1e565b3480156105af57600080fd5b506102e36105be36600461249c565b610ea0565b3480156105cf57600080fd5b506102e3610eb7565b3480156105e457600080fd5b506102b96105f33660046124b4565b610edb565b34801561060457600080fd5b506102e3610efa565b34801561061957600080fd5b506102346106283660046122ca565b610f1e565b34801561063957600080fd5b5061025f610f4c565b600061064d82610ff5565b90505b919050565b60606002805461066490613024565b80601f016020809104026020016040519081016040528092919081815260200182805461069090613024565b80156106dd5780601f106106b2576101008083540402835291602001916106dd565b820191906000526020600020905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b60006106f28261101a565b6107175760405162461bcd60e51b815260040161070e90612c2c565b60405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061073e82610c3a565b9050806001600160a01b0316836001600160a01b031614156107725760405162461bcd60e51b815260040161070e90612d10565b806001600160a01b0316610784611037565b6001600160a01b031614806107a057506107a081610628611037565b6107bc5760405162461bcd60e51b815260040161070e90612b07565b6107c6838361103b565b505050565b60128054600181018255600091909152835161080e917fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344401906020860190612171565b50601380546001810182556000919091528251610852917f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09001906020850190612171565b50601480546001810182556000919091528151610896917fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec01906020840190612171565b506108a084610c6f565b50505050565b600a5490565b6108bd6108b7611037565b826110a9565b6108d95760405162461bcd60e51b815260040161070e90612d51565b6107c683838361112e565b60009081526020819052604090206001015490565b610902826108e4565b6109138161090e611037565b61125b565b6107c683836112bf565b600061092883610cd4565b82106109465760405162461bcd60e51b815260040161070e906128e5565b506001600160a01b03821660009081526008602090815260408083208484529091529020545b92915050565b61097a611037565b6001600160a01b0316816001600160a01b0316146109aa5760405162461bcd60e51b815260040161070e90612f24565b6109b482826112e1565b5050565b6060600f805461066490613024565b6109f37f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6104ff611037565b610a0f5760405162461bcd60e51b815260040161070e90612ec6565b610a17611303565b565b6107c683838360405180602001604052806000815250610de5565b610a3f6108b7611037565b610a5b5760405162461bcd60e51b815260040161070e90612e76565b610a6481611371565b50565b6000610a716108a6565b8210610a8f5760405162461bcd60e51b815260040161070e90612da2565b600a8281548110610ab057634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600c5460ff1690565b6060610ad68261101a565b610af25760405162461bcd60e51b815260040161070e90612e4b565b600060128381548110610b1557634e487b7160e01b600052603260045260246000fd5b90600052602060002001604051602001610b2f9190612657565b6040516020818303038152906040529050600060138481548110610b6357634e487b7160e01b600052603260045260246000fd5b90600052602060002001604051602001610b7d9190612622565b6040516020818303038152906040529050600060148581548110610bb157634e487b7160e01b600052603260045260246000fd5b90600052602060002001604051602001610bcb9190612674565b60405160208183030381529060405290506000838383604051602001610bf393929190612690565b60405160208183030381529060405290506000610c0f82611418565b604051602001610c1f9190612705565b60408051808303601f19018152919052979650505050505050565b6000818152600460205260408120546001600160a01b03168061064d5760405162461bcd60e51b815260040161070e90612bae565b610c9b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66104ff611037565b610cb75760405162461bcd60e51b815260040161070e90612dee565b610cca81610cc5600d61158c565b611590565b610a64600d61166f565b60006001600160a01b038216610cfc5760405162461bcd60e51b815260040161070e90612b64565b506001600160a01b031660009081526005602052604090205490565b610d447f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6104ff611037565b610d605760405162461bcd60e51b815260040161070e906129b9565b610a17611678565b6000828152600160205260408120610d8090836116d3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606003805461066490613024565b600081565b6109b4610dcf611037565b83836116df565b60606011805461066490613024565b610df6610df0611037565b836110a9565b610e125760405162461bcd60e51b815260040161070e90612d51565b6108a084848484611782565b6060610e298261101a565b610e455760405162461bcd60e51b815260040161070e90612cc1565b6000610e4f6117b5565b90506000815111610e6f5760405180602001604052806000815250610d80565b80610e79846117c4565b604051602001610e8a9291906125f3565b6040516020818303038152906040529392505050565b600081815260016020526040812061064d906118df565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610ee4826108e4565b610ef08161090e611037565b6107c683836112e1565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60606010805461066490613024565b610f658282610d87565b6109b4576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610f9c611037565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610d80836001600160a01b0384166118ea565b60006001600160e01b0319821663780e9d6360e01b148061064d575061064d82611934565b6000908152600460205260409020546001600160a01b0316151590565b3390565b600081815260066020526040902080546001600160a01b0319166001600160a01b038416908117909155819061107082610c3a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006110b48261101a565b6110d05760405162461bcd60e51b815260040161070e90612a91565b60006110db83610c3a565b9050806001600160a01b0316846001600160a01b031614806111165750836001600160a01b031661110b846106e7565b6001600160a01b0316145b8061112657506111268185610f1e565b949350505050565b826001600160a01b031661114182610c3a565b6001600160a01b0316146111675760405162461bcd60e51b815260040161070e90612c78565b6001600160a01b03821661118d5760405162461bcd60e51b815260040161070e90612a16565b611198838383611974565b6111a360008261103b565b6001600160a01b03831660009081526005602052604081208054600192906111cc908490612fca565b90915550506001600160a01b03821660009081526005602052604081208054600192906111fa908490612f7f565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6112658282610d87565b6109b45761127d816001600160a01b0316601461197f565b61128883602061197f565b60405160200161129992919061274a565b60408051601f198184030181529082905262461bcd60e51b825261070e91600401612824565b6112c98282610f5b565b60008281526001602052604090206107c69082610fe0565b6112eb8282611b31565b60008281526001602052604090206107c69082611bb4565b61130b610ac2565b6113275760405162461bcd60e51b815260040161070e906128b7565b600c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61135a611037565b60405161136791906127bf565b60405180910390a1565b600061137c82610c3a565b905061138a81600084611974565b61139560008361103b565b6001600160a01b03811660009081526005602052604081208054600192906113be908490612fca565b909155505060008281526004602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b805160609080611438575050604080516020810190915260008152610650565b60006003611447836002612f7f565b6114519190612f97565b61145c906004612fab565b9050600061146b826020612f7f565b67ffffffffffffffff81111561149157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156114bb576020820181803683370190505b50905060006040518060600160405280604081526020016130e7604091399050600181016020830160005b86811015611547576003818a01810151603f601282901c8116860151600c83901c8216870151600684901c831688015192909316870151600891821b60ff94851601821b92841692909201901b91160160e01b8352600490920191016114e6565b50600386066001811461156157600281146115725761157e565b613d3d60f01b60011983015261157e565b603d60f81b6000198301525b505050918152949350505050565b5490565b6001600160a01b0382166115b65760405162461bcd60e51b815260040161070e90612bf7565b6115bf8161101a565b156115dc5760405162461bcd60e51b815260040161070e90612982565b6115e860008383611974565b6001600160a01b0382166000908152600560205260408120805460019290611611908490612f7f565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80546001019055565b611680610ac2565b1561169d5760405162461bcd60e51b815260040161070e90612add565b600c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861135a611037565b6000610d808383611bc9565b816001600160a01b0316836001600160a01b031614156117115760405162461bcd60e51b815260040161070e90612a5a565b6001600160a01b0383811660008181526007602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190611775908590612810565b60405180910390a3505050565b61178d84848461112e565b61179984848484611c01565b6108a05760405162461bcd60e51b815260040161070e90612930565b6060600e805461066490613024565b6060816117e957506040805180820190915260018152600360fc1b6020820152610650565b8160005b811561181357806117fd8161305f565b915061180c9050600a83612f97565b91506117ed565b60008167ffffffffffffffff81111561183c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611866576020820181803683370190505b5090505b84156111265761187b600183612fca565b9150611888600a8661307a565b611893906030612f7f565b60f81b8183815181106118b657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506118d8600a86612f97565b945061186a565b600061064d8261158c565b60006118f68383611d1c565b61192c5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561096c565b50600061096c565b60006001600160e01b031982166380ac58cd60e01b148061196557506001600160e01b03198216635b5e139f60e01b145b8061064d575061064d82611d34565b6107c6838383611d59565b6060600061198e836002612fab565b611999906002612f7f565b67ffffffffffffffff8111156119bf57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156119e9576020820181803683370190505b509050600360fc1b81600081518110611a1257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a4f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611a73846002612fab565b611a7e906001612f7f565b90505b6001811115611b12576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611ac057634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611ae457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611b0b8161300d565b9050611a81565b508315610d805760405162461bcd60e51b815260040161070e90612837565b611b3b8282610d87565b156109b4576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055611b70611037565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610d80836001600160a01b038416611d89565b6000826000018281548110611bee57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000611c15846001600160a01b0316611ea6565b15611d1157836001600160a01b031663150b7a02611c31611037565b8786866040518563ffffffff1660e01b8152600401611c5394939291906127d3565b602060405180830381600087803b158015611c6d57600080fd5b505af1925050508015611c9d575060408051601f3d908101601f19168201909252611c9a91810190612513565b60015b611cf7573d808015611ccb576040519150601f19603f3d011682016040523d82523d6000602084013e611cd0565b606091505b508051611cef5760405162461bcd60e51b815260040161070e90612930565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611126565b506001949350505050565b60009081526001919091016020526040902054151590565b60006001600160e01b03198216635a05180f60e01b148061064d575061064d82611eac565b611d64838383611ed1565b611d6c610ac2565b156107c65760405162461bcd60e51b815260040161070e9061286c565b60008181526001830160205260408120548015611e9c576000611dad600183612fca565b8554909150600090611dc190600190612fca565b9050818114611e42576000866000018281548110611def57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110611e2057634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611e6157634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061096c565b600091505061096c565b3b151590565b60006001600160e01b03198216637965db0b60e01b148061064d575061064d82611f5a565b611edc8383836107c6565b6001600160a01b038316611ef857611ef381611f73565b611f1b565b816001600160a01b0316836001600160a01b031614611f1b57611f1b8382611fb7565b6001600160a01b038216611f3757611f3281612054565b6107c6565b826001600160a01b0316826001600160a01b0316146107c6576107c6828261212d565b6001600160e01b031981166301ffc9a760e01b14919050565b600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b60006001611fc484610cd4565b611fce9190612fca565b600083815260096020526040902054909150808214612021576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a5460009061206690600190612fca565b6000838152600b6020526040812054600a805493945090928490811061209c57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600a83815481106120cb57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a80548061211157634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061213883610cd4565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b82805461217d90613024565b90600052602060002090601f01602090048101928261219f57600085556121e5565b82601f106121b857805160ff19168380011785556121e5565b828001600101855582156121e5579182015b828111156121e55782518255916020019190600101906121ca565b506121f19291506121f5565b5090565b5b808211156121f157600081556001016121f6565b600067ffffffffffffffff80841115612225576122256130ba565b604051601f8501601f191681016020018281118282101715612249576122496130ba565b60405284815291508183850186101561226157600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b038116811461065057600080fd5b600082601f8301126122a1578081fd5b610d808383356020850161220a565b6000602082840312156122c1578081fd5b610d808261227a565b600080604083850312156122dc578081fd5b6122e58361227a565b91506122f36020840161227a565b90509250929050565b600080600060608486031215612310578081fd5b6123198461227a565b92506123276020850161227a565b9150604084013590509250925092565b6000806000806080858703121561234c578081fd5b6123558561227a565b93506123636020860161227a565b925060408501359150606085013567ffffffffffffffff811115612385578182fd5b8501601f81018713612395578182fd5b6123a48782356020840161220a565b91505092959194509250565b600080604083850312156123c2578182fd5b6123cb8361227a565b9150602083013580151581146123df578182fd5b809150509250929050565b600080600080608085870312156123ff578384fd5b6124088561227a565b9350602085013567ffffffffffffffff80821115612424578485fd5b61243088838901612291565b94506040870135915080821115612445578384fd5b61245188838901612291565b93506060870135915080821115612466578283fd5b506123a487828801612291565b60008060408385031215612485578182fd5b61248e8361227a565b946020939093013593505050565b6000602082840312156124ad578081fd5b5035919050565b600080604083850312156124c6578182fd5b823591506122f36020840161227a565b600080604083850312156124e8578182fd5b50508035926020909101359150565b600060208284031215612508578081fd5b8135610d80816130d0565b600060208284031215612524578081fd5b8151610d80816130d0565b60008151808452612547816020860160208601612fe1565b601f01601f19169290920160200192915050565b80546000906002810460018083168061257557607f831692505b602080841082141561259557634e487b7160e01b86526022600452602486fd5b8180156125a957600181146125ba576125e7565b60ff198616895284890196506125e7565b6125c388612f73565b60005b868110156125df5781548b8201529085019083016125c6565b505084890196505b50505050505092915050565b60008351612605818460208801612fe1565b835190830190612619818360208801612fe1565b01949350505050565b6e113232b9b1b934b83a34b7b7111d1160891b81526000612646600f83018461255b565b601160f91b81526001019392505050565b67113730b6b2911d1160c11b81526000612646600883018461255b565b66112aa926111d1160c91b81526000612646600783018461255b565b6000607b60f81b825284516126ac816001850160208901612fe1565b8083019050600b60fa1b80600183015285516126cf816002850160208a01612fe1565b600292019182015283516126ea816003840160208801612fe1565b607d60f81b6003929091019182015260040195945050505050565b60007f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008252825161273d81601d850160208701612fe1565b91909101601d0192915050565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351612782816017850160208801612fe1565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516127b3816028840160208801612fe1565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906128069083018461252f565b9695505050505050565b901515815260200190565b90815260200190565b600060208252610d80602083018461252f565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252602b908201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760408201526a1a1a5b19481c185d5cd95960aa1b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b6020808252603e908201527f4552433732315072657365744d696e7465725061757365724175746f49643a2060408201527f6d75737420686176652070617573657220726f6c6520746f2070617573650000606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b6020808252603d908201527f4552433732315072657365744d696e7465725061757365724175746f49643a2060408201527f6d7573742068617665206d696e74657220726f6c6520746f206d696e74000000606082015260800190565b6020808252601190820152703737b732bc39b4ba32b73a103a37b5b2b760791b604082015260600190565b60208082526030908201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760408201526f1b995c881b9bdc88185c1c1c9bdd995960821b606082015260800190565b602080825260409082018190527f4552433732315072657365744d696e7465725061757365724175746f49643a20908201527f6d75737420686176652070617573657220726f6c6520746f20756e7061757365606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60009081526020902090565b60008219821115612f9257612f9261308e565b500190565b600082612fa657612fa66130a4565b500490565b6000816000190483118215151615612fc557612fc561308e565b500290565b600082821015612fdc57612fdc61308e565b500390565b60005b83811015612ffc578181015183820152602001612fe4565b838111156108a05750506000910152565b60008161301c5761301c61308e565b506000190190565b60028104600182168061303857607f821691505b6020821081141561305957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156130735761307361308e565b5060010190565b600082613089576130896130a4565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610a6457600080fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220c6f21c68a9815de04ac7bb9bfd5f17774a1d64eebde8b7f0a962f43e5d51a94664736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061020f5760003560e01c80636352211e11610118578063b722720d116100a0578063d53913931161006f578063d5391393146105c3578063d547741f146105d8578063e63ab1e9146105f8578063e985e9c51461060d578063f7b5c5b61461062d5761020f565b8063b722720d1461054e578063b88d4fde14610563578063c87b56dd14610583578063ca15c873146105a35761020f565b80639010d07c116100e75780639010d07c146104c457806391d14854146104e457806395d89b4114610504578063a217fddf14610519578063a22cb4651461052e5761020f565b80636352211e1461044f5780636a6278421461046f57806370a082311461048f5780638456cb59146104af5761020f565b80632f745c591161019b57806342842e0e1161016a57806342842e0e146103ba57806342966c68146103da5780634f6ccce7146103fa5780635c975abb1461041a57806361eba5521461042f5761020f565b80632f745c591461035057806336568abe146103705780633bbdbee0146103905780633f4ba83a146103a55761020f565b806311ece751116101e257806311ece751146102bb57806318160ddd146102ce57806323b872dd146102f0578063248a9ca3146103105780632f2ff15d146103305761020f565b806301ffc9a71461021457806306fdde031461024a578063081812fc1461026c578063095ea7b314610299575b600080fd5b34801561022057600080fd5b5061023461022f3660046124f7565b610642565b6040516102419190612810565b60405180910390f35b34801561025657600080fd5b5061025f610655565b6040516102419190612824565b34801561027857600080fd5b5061028c61028736600461249c565b6106e7565b60405161024191906127bf565b3480156102a557600080fd5b506102b96102b4366004612473565b610733565b005b6102b96102c93660046123ea565b6107cb565b3480156102da57600080fd5b506102e36108a6565b604051610241919061281b565b3480156102fc57600080fd5b506102b961030b3660046122fc565b6108ac565b34801561031c57600080fd5b506102e361032b36600461249c565b6108e4565b34801561033c57600080fd5b506102b961034b3660046124b4565b6108f9565b34801561035c57600080fd5b506102e361036b366004612473565b61091d565b34801561037c57600080fd5b506102b961038b3660046124b4565b610972565b34801561039c57600080fd5b5061025f6109b8565b3480156103b157600080fd5b506102b96109c7565b3480156103c657600080fd5b506102b96103d53660046122fc565b610a19565b3480156103e657600080fd5b506102b96103f536600461249c565b610a34565b34801561040657600080fd5b506102e361041536600461249c565b610a67565b34801561042657600080fd5b50610234610ac2565b34801561043b57600080fd5b5061025f61044a36600461249c565b610acb565b34801561045b57600080fd5b5061028c61046a36600461249c565b610c3a565b34801561047b57600080fd5b506102b961048a3660046122b0565b610c6f565b34801561049b57600080fd5b506102e36104aa3660046122b0565b610cd4565b3480156104bb57600080fd5b506102b9610d18565b3480156104d057600080fd5b5061028c6104df3660046124d6565b610d68565b3480156104f057600080fd5b506102346104ff3660046124b4565b610d87565b34801561051057600080fd5b5061025f610db0565b34801561052557600080fd5b506102e3610dbf565b34801561053a57600080fd5b506102b96105493660046123b0565b610dc4565b34801561055a57600080fd5b5061025f610dd6565b34801561056f57600080fd5b506102b961057e366004612337565b610de5565b34801561058f57600080fd5b5061025f61059e36600461249c565b610e1e565b3480156105af57600080fd5b506102e36105be36600461249c565b610ea0565b3480156105cf57600080fd5b506102e3610eb7565b3480156105e457600080fd5b506102b96105f33660046124b4565b610edb565b34801561060457600080fd5b506102e3610efa565b34801561061957600080fd5b506102346106283660046122ca565b610f1e565b34801561063957600080fd5b5061025f610f4c565b600061064d82610ff5565b90505b919050565b60606002805461066490613024565b80601f016020809104026020016040519081016040528092919081815260200182805461069090613024565b80156106dd5780601f106106b2576101008083540402835291602001916106dd565b820191906000526020600020905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b60006106f28261101a565b6107175760405162461bcd60e51b815260040161070e90612c2c565b60405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061073e82610c3a565b9050806001600160a01b0316836001600160a01b031614156107725760405162461bcd60e51b815260040161070e90612d10565b806001600160a01b0316610784611037565b6001600160a01b031614806107a057506107a081610628611037565b6107bc5760405162461bcd60e51b815260040161070e90612b07565b6107c6838361103b565b505050565b60128054600181018255600091909152835161080e917fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344401906020860190612171565b50601380546001810182556000919091528251610852917f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09001906020850190612171565b50601480546001810182556000919091528151610896917fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec01906020840190612171565b506108a084610c6f565b50505050565b600a5490565b6108bd6108b7611037565b826110a9565b6108d95760405162461bcd60e51b815260040161070e90612d51565b6107c683838361112e565b60009081526020819052604090206001015490565b610902826108e4565b6109138161090e611037565b61125b565b6107c683836112bf565b600061092883610cd4565b82106109465760405162461bcd60e51b815260040161070e906128e5565b506001600160a01b03821660009081526008602090815260408083208484529091529020545b92915050565b61097a611037565b6001600160a01b0316816001600160a01b0316146109aa5760405162461bcd60e51b815260040161070e90612f24565b6109b482826112e1565b5050565b6060600f805461066490613024565b6109f37f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6104ff611037565b610a0f5760405162461bcd60e51b815260040161070e90612ec6565b610a17611303565b565b6107c683838360405180602001604052806000815250610de5565b610a3f6108b7611037565b610a5b5760405162461bcd60e51b815260040161070e90612e76565b610a6481611371565b50565b6000610a716108a6565b8210610a8f5760405162461bcd60e51b815260040161070e90612da2565b600a8281548110610ab057634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600c5460ff1690565b6060610ad68261101a565b610af25760405162461bcd60e51b815260040161070e90612e4b565b600060128381548110610b1557634e487b7160e01b600052603260045260246000fd5b90600052602060002001604051602001610b2f9190612657565b6040516020818303038152906040529050600060138481548110610b6357634e487b7160e01b600052603260045260246000fd5b90600052602060002001604051602001610b7d9190612622565b6040516020818303038152906040529050600060148581548110610bb157634e487b7160e01b600052603260045260246000fd5b90600052602060002001604051602001610bcb9190612674565b60405160208183030381529060405290506000838383604051602001610bf393929190612690565b60405160208183030381529060405290506000610c0f82611418565b604051602001610c1f9190612705565b60408051808303601f19018152919052979650505050505050565b6000818152600460205260408120546001600160a01b03168061064d5760405162461bcd60e51b815260040161070e90612bae565b610c9b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66104ff611037565b610cb75760405162461bcd60e51b815260040161070e90612dee565b610cca81610cc5600d61158c565b611590565b610a64600d61166f565b60006001600160a01b038216610cfc5760405162461bcd60e51b815260040161070e90612b64565b506001600160a01b031660009081526005602052604090205490565b610d447f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6104ff611037565b610d605760405162461bcd60e51b815260040161070e906129b9565b610a17611678565b6000828152600160205260408120610d8090836116d3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606003805461066490613024565b600081565b6109b4610dcf611037565b83836116df565b60606011805461066490613024565b610df6610df0611037565b836110a9565b610e125760405162461bcd60e51b815260040161070e90612d51565b6108a084848484611782565b6060610e298261101a565b610e455760405162461bcd60e51b815260040161070e90612cc1565b6000610e4f6117b5565b90506000815111610e6f5760405180602001604052806000815250610d80565b80610e79846117c4565b604051602001610e8a9291906125f3565b6040516020818303038152906040529392505050565b600081815260016020526040812061064d906118df565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610ee4826108e4565b610ef08161090e611037565b6107c683836112e1565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60606010805461066490613024565b610f658282610d87565b6109b4576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610f9c611037565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610d80836001600160a01b0384166118ea565b60006001600160e01b0319821663780e9d6360e01b148061064d575061064d82611934565b6000908152600460205260409020546001600160a01b0316151590565b3390565b600081815260066020526040902080546001600160a01b0319166001600160a01b038416908117909155819061107082610c3a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006110b48261101a565b6110d05760405162461bcd60e51b815260040161070e90612a91565b60006110db83610c3a565b9050806001600160a01b0316846001600160a01b031614806111165750836001600160a01b031661110b846106e7565b6001600160a01b0316145b8061112657506111268185610f1e565b949350505050565b826001600160a01b031661114182610c3a565b6001600160a01b0316146111675760405162461bcd60e51b815260040161070e90612c78565b6001600160a01b03821661118d5760405162461bcd60e51b815260040161070e90612a16565b611198838383611974565b6111a360008261103b565b6001600160a01b03831660009081526005602052604081208054600192906111cc908490612fca565b90915550506001600160a01b03821660009081526005602052604081208054600192906111fa908490612f7f565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6112658282610d87565b6109b45761127d816001600160a01b0316601461197f565b61128883602061197f565b60405160200161129992919061274a565b60408051601f198184030181529082905262461bcd60e51b825261070e91600401612824565b6112c98282610f5b565b60008281526001602052604090206107c69082610fe0565b6112eb8282611b31565b60008281526001602052604090206107c69082611bb4565b61130b610ac2565b6113275760405162461bcd60e51b815260040161070e906128b7565b600c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61135a611037565b60405161136791906127bf565b60405180910390a1565b600061137c82610c3a565b905061138a81600084611974565b61139560008361103b565b6001600160a01b03811660009081526005602052604081208054600192906113be908490612fca565b909155505060008281526004602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b805160609080611438575050604080516020810190915260008152610650565b60006003611447836002612f7f565b6114519190612f97565b61145c906004612fab565b9050600061146b826020612f7f565b67ffffffffffffffff81111561149157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156114bb576020820181803683370190505b50905060006040518060600160405280604081526020016130e7604091399050600181016020830160005b86811015611547576003818a01810151603f601282901c8116860151600c83901c8216870151600684901c831688015192909316870151600891821b60ff94851601821b92841692909201901b91160160e01b8352600490920191016114e6565b50600386066001811461156157600281146115725761157e565b613d3d60f01b60011983015261157e565b603d60f81b6000198301525b505050918152949350505050565b5490565b6001600160a01b0382166115b65760405162461bcd60e51b815260040161070e90612bf7565b6115bf8161101a565b156115dc5760405162461bcd60e51b815260040161070e90612982565b6115e860008383611974565b6001600160a01b0382166000908152600560205260408120805460019290611611908490612f7f565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80546001019055565b611680610ac2565b1561169d5760405162461bcd60e51b815260040161070e90612add565b600c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861135a611037565b6000610d808383611bc9565b816001600160a01b0316836001600160a01b031614156117115760405162461bcd60e51b815260040161070e90612a5a565b6001600160a01b0383811660008181526007602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190611775908590612810565b60405180910390a3505050565b61178d84848461112e565b61179984848484611c01565b6108a05760405162461bcd60e51b815260040161070e90612930565b6060600e805461066490613024565b6060816117e957506040805180820190915260018152600360fc1b6020820152610650565b8160005b811561181357806117fd8161305f565b915061180c9050600a83612f97565b91506117ed565b60008167ffffffffffffffff81111561183c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611866576020820181803683370190505b5090505b84156111265761187b600183612fca565b9150611888600a8661307a565b611893906030612f7f565b60f81b8183815181106118b657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506118d8600a86612f97565b945061186a565b600061064d8261158c565b60006118f68383611d1c565b61192c5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561096c565b50600061096c565b60006001600160e01b031982166380ac58cd60e01b148061196557506001600160e01b03198216635b5e139f60e01b145b8061064d575061064d82611d34565b6107c6838383611d59565b6060600061198e836002612fab565b611999906002612f7f565b67ffffffffffffffff8111156119bf57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156119e9576020820181803683370190505b509050600360fc1b81600081518110611a1257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a4f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611a73846002612fab565b611a7e906001612f7f565b90505b6001811115611b12576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611ac057634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611ae457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611b0b8161300d565b9050611a81565b508315610d805760405162461bcd60e51b815260040161070e90612837565b611b3b8282610d87565b156109b4576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055611b70611037565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610d80836001600160a01b038416611d89565b6000826000018281548110611bee57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000611c15846001600160a01b0316611ea6565b15611d1157836001600160a01b031663150b7a02611c31611037565b8786866040518563ffffffff1660e01b8152600401611c5394939291906127d3565b602060405180830381600087803b158015611c6d57600080fd5b505af1925050508015611c9d575060408051601f3d908101601f19168201909252611c9a91810190612513565b60015b611cf7573d808015611ccb576040519150601f19603f3d011682016040523d82523d6000602084013e611cd0565b606091505b508051611cef5760405162461bcd60e51b815260040161070e90612930565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611126565b506001949350505050565b60009081526001919091016020526040902054151590565b60006001600160e01b03198216635a05180f60e01b148061064d575061064d82611eac565b611d64838383611ed1565b611d6c610ac2565b156107c65760405162461bcd60e51b815260040161070e9061286c565b60008181526001830160205260408120548015611e9c576000611dad600183612fca565b8554909150600090611dc190600190612fca565b9050818114611e42576000866000018281548110611def57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110611e2057634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611e6157634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061096c565b600091505061096c565b3b151590565b60006001600160e01b03198216637965db0b60e01b148061064d575061064d82611f5a565b611edc8383836107c6565b6001600160a01b038316611ef857611ef381611f73565b611f1b565b816001600160a01b0316836001600160a01b031614611f1b57611f1b8382611fb7565b6001600160a01b038216611f3757611f3281612054565b6107c6565b826001600160a01b0316826001600160a01b0316146107c6576107c6828261212d565b6001600160e01b031981166301ffc9a760e01b14919050565b600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b60006001611fc484610cd4565b611fce9190612fca565b600083815260096020526040902054909150808214612021576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a5460009061206690600190612fca565b6000838152600b6020526040812054600a805493945090928490811061209c57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600a83815481106120cb57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a80548061211157634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061213883610cd4565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b82805461217d90613024565b90600052602060002090601f01602090048101928261219f57600085556121e5565b82601f106121b857805160ff19168380011785556121e5565b828001600101855582156121e5579182015b828111156121e55782518255916020019190600101906121ca565b506121f19291506121f5565b5090565b5b808211156121f157600081556001016121f6565b600067ffffffffffffffff80841115612225576122256130ba565b604051601f8501601f191681016020018281118282101715612249576122496130ba565b60405284815291508183850186101561226157600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b038116811461065057600080fd5b600082601f8301126122a1578081fd5b610d808383356020850161220a565b6000602082840312156122c1578081fd5b610d808261227a565b600080604083850312156122dc578081fd5b6122e58361227a565b91506122f36020840161227a565b90509250929050565b600080600060608486031215612310578081fd5b6123198461227a565b92506123276020850161227a565b9150604084013590509250925092565b6000806000806080858703121561234c578081fd5b6123558561227a565b93506123636020860161227a565b925060408501359150606085013567ffffffffffffffff811115612385578182fd5b8501601f81018713612395578182fd5b6123a48782356020840161220a565b91505092959194509250565b600080604083850312156123c2578182fd5b6123cb8361227a565b9150602083013580151581146123df578182fd5b809150509250929050565b600080600080608085870312156123ff578384fd5b6124088561227a565b9350602085013567ffffffffffffffff80821115612424578485fd5b61243088838901612291565b94506040870135915080821115612445578384fd5b61245188838901612291565b93506060870135915080821115612466578283fd5b506123a487828801612291565b60008060408385031215612485578182fd5b61248e8361227a565b946020939093013593505050565b6000602082840312156124ad578081fd5b5035919050565b600080604083850312156124c6578182fd5b823591506122f36020840161227a565b600080604083850312156124e8578182fd5b50508035926020909101359150565b600060208284031215612508578081fd5b8135610d80816130d0565b600060208284031215612524578081fd5b8151610d80816130d0565b60008151808452612547816020860160208601612fe1565b601f01601f19169290920160200192915050565b80546000906002810460018083168061257557607f831692505b602080841082141561259557634e487b7160e01b86526022600452602486fd5b8180156125a957600181146125ba576125e7565b60ff198616895284890196506125e7565b6125c388612f73565b60005b868110156125df5781548b8201529085019083016125c6565b505084890196505b50505050505092915050565b60008351612605818460208801612fe1565b835190830190612619818360208801612fe1565b01949350505050565b6e113232b9b1b934b83a34b7b7111d1160891b81526000612646600f83018461255b565b601160f91b81526001019392505050565b67113730b6b2911d1160c11b81526000612646600883018461255b565b66112aa926111d1160c91b81526000612646600783018461255b565b6000607b60f81b825284516126ac816001850160208901612fe1565b8083019050600b60fa1b80600183015285516126cf816002850160208a01612fe1565b600292019182015283516126ea816003840160208801612fe1565b607d60f81b6003929091019182015260040195945050505050565b60007f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008252825161273d81601d850160208701612fe1565b91909101601d0192915050565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351612782816017850160208801612fe1565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516127b3816028840160208801612fe1565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906128069083018461252f565b9695505050505050565b901515815260200190565b90815260200190565b600060208252610d80602083018461252f565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252602b908201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760408201526a1a1a5b19481c185d5cd95960aa1b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b6020808252603e908201527f4552433732315072657365744d696e7465725061757365724175746f49643a2060408201527f6d75737420686176652070617573657220726f6c6520746f2070617573650000606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b6020808252603d908201527f4552433732315072657365744d696e7465725061757365724175746f49643a2060408201527f6d7573742068617665206d696e74657220726f6c6520746f206d696e74000000606082015260800190565b6020808252601190820152703737b732bc39b4ba32b73a103a37b5b2b760791b604082015260600190565b60208082526030908201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760408201526f1b995c881b9bdc88185c1c1c9bdd995960821b606082015260800190565b602080825260409082018190527f4552433732315072657365744d696e7465725061757365724175746f49643a20908201527f6d75737420686176652070617573657220726f6c6520746f20756e7061757365606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60009081526020902090565b60008219821115612f9257612f9261308e565b500190565b600082612fa657612fa66130a4565b500490565b6000816000190483118215151615612fc557612fc561308e565b500290565b600082821015612fdc57612fdc61308e565b500390565b60005b83811015612ffc578181015183820152602001612fe4565b838111156108a05750506000910152565b60008161301c5761301c61308e565b506000190190565b60028104600182168061303857607f821691505b6020821081141561305957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156130735761307361308e565b5060010190565b600082613089576130896130a4565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610a6457600080fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220c6f21c68a9815de04ac7bb9bfd5f17774a1d64eebde8b7f0a962f43e5d51a94664736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "427:3032:4:-:0;;;824:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;931:5;938:7;947:4;1827::29;1833:6;1449:5:21;1441;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1464:17:21;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:13;:15;;-1:-1:-1;;981:15:13;;;-1:-1:-1;1851:28:29;;::::1;::::0;:13:::1;::::0;:28:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1890:44:29::1;2057:4:8;1921:12:29;:10;:12::i;:::-;1890:10;:44::i;:::-;1945:37;1272:24;1969:12;:10;:12::i;1945:37::-;1992;1340:24;2016:12;:10;:12::i;1992:37::-;-1:-1:-1::0;;1011:15:4;;::::1;::::0;-1:-1:-1;1011:7:4::1;::::0;:15:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1036:19:4;;::::1;::::0;:9:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1065:13:4;;::::1;::::0;:6:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;;824:261:::0;;;427:3032;;640:96:31;719:10;640:96;:::o;6218:110:8:-;6296:25;6307:4;6313:7;6296:10;:25::i;:::-;6218:110;;:::o;1947:166:9:-;2034:31;2051:4;2057:7;2034:16;;;;;:31;;:::i;:::-;2075:18;;;;:12;:18;;;;;;;;:31;;2098:7;;2075:22;;;;;:31;;:::i;:::-;;1947:166;;:::o;6822:233:8:-;6905:22;6913:4;6919:7;6905;:22::i;:::-;6900:149;;6943:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6943:29:8;;;;;;;;;:36;;-1:-1:-1;;6943:36:8;-1:-1:-1;6943:36:8;;;7025:12;:10;:12::i;:::-;6998:40;;-1:-1:-1;;;;;6998:40:8;;;;;;;7010:4;;6998:40;;;;;6822:233;;:::o;7612:150:41:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:41;;7705:4;:50::i;:::-;7698:57;;7612:150;;;;;:::o;2894:137:8:-;2972:4;2995:12;;;;;;;;;;;-1:-1:-1;;;;;2995:29:8;;;;;;;;;;;;;;;2894:137::o;1697:404:41:-;1760:4;1781:21;1791:3;1796:5;1781:9;:21::i;:::-;1776:319;;-1:-1:-1;1818:23:41;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:41;2072:12;;3738:127;3811:4;3834:19;;;:12;;;;;:19;;;;;;:24;;;3738:127::o;427:3032:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;427:3032:4;;;-1:-1:-1;427:3032:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:42;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;234:10:42;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;-1:-1:-1;;388:2:42;369:13;;365:27;353:40;;349:49;;433:22;;;413:18;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:42;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:42;80:815;-1:-1:-1;;;;;80:815:42:o;900:812::-;;;;1087:2;1075:9;1066:7;1062:23;1058:32;1055:2;;;1108:6;1100;1093:22;1055:2;1140:16;;-1:-1:-1;1205:14:42;;;1202:2;;;1237:6;1229;1222:22;1202:2;1265:63;1320:7;1311:6;1300:9;1296:22;1265:63;:::i;:::-;1255:73;;1374:2;1363:9;1359:18;1353:25;1337:41;;1403:2;1393:8;1390:16;1387:2;;;1424:6;1416;1409:22;1387:2;1452:65;1509:7;1498:8;1487:9;1483:24;1452:65;:::i;:::-;1442:75;;1563:2;1552:9;1548:18;1542:25;1526:41;;1592:2;1582:8;1579:16;1576:2;;;1613:6;1605;1598:22;1576:2;;1641:65;1698:7;1687:8;1676:9;1672:24;1641:65;:::i;:::-;1631:75;;;1045:667;;;;;:::o;1717:380::-;1802:1;1792:12;;1849:1;1839:12;;;1860:2;;1914:4;1906:6;1902:17;1892:27;;1860:2;1967;1959:6;1956:14;1936:18;1933:38;1930:2;;;2013:10;2008:3;2004:20;2001:1;1994:31;2048:4;2045:1;2038:15;2076:4;2073:1;2066:15;1930:2;;1772:325;;;:::o;2102:127::-;2163:10;2158:3;2154:20;2151:1;2144:31;2194:4;2191:1;2184:15;2218:4;2215:1;2208:15;2134:95;427:3032:4;;;;;;",
  "deployedSourceMap": "427:3032:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4005:246:29;;;;;;;;;;-1:-1:-1;4005:246:29;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2473:98:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:21;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3522:401::-;;;;;;;;;;-1:-1:-1;3522:401:21;;;;;:::i;:::-;;:::i;:::-;;1838:350:4;;;;;;:::i;:::-;;:::i;1615:111:25:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4711:330:21:-;;;;;;;;;;-1:-1:-1;4711:330:21;;;;;:::i;:::-;;:::i;3977:121:8:-;;;;;;;;;;-1:-1:-1;3977:121:8;;;;;:::i;:::-;;:::i;4348:145::-;;;;;;;;;;-1:-1:-1;4348:145:8;;;;;:::i;:::-;;:::i;1291:253:25:-;;;;;;;;;;-1:-1:-1;1291:253:25;;;;;:::i;:::-;;:::i;5365:214:8:-;;;;;;;;;;-1:-1:-1;5365:214:8;;;;;:::i;:::-;;:::i;1142:89:4:-;;;;;;;;;;;;;:::i;3517:182:29:-;;;;;;;;;;;;;:::i;5107:179:21:-;;;;;;;;;;-1:-1:-1;5107:179:21;;;;;:::i;:::-;;:::i;529:241:24:-;;;;;;;;;;-1:-1:-1;529:241:24;;;;;:::i;:::-;;:::i;1798:230:25:-;;;;;;;;;;-1:-1:-1;1798:230:25;;;;;:::i;:::-;;:::i;1098:84:13:-;;;;;;;;;;;;;:::i;2399:1058:4:-;;;;;;;;;;-1:-1:-1;2399:1058:4;;;;;:::i;:::-;;:::i;2176:235:21:-;;;;;;;;;;-1:-1:-1;2176:235:21;;;;;:::i;:::-;;:::i;2529:400:29:-;;;;;;;;;;-1:-1:-1;2529:400:29;;;;;:::i;:::-;;:::i;1914:205:21:-;;;;;;;;;;-1:-1:-1;1914:205:21;;;;;:::i;:::-;;:::i;3133:176:29:-;;;;;;;;;;;;;:::i;1416:143:9:-;;;;;;;;;;-1:-1:-1;1416:143:9;;;;;:::i;:::-;;:::i;2894:137:8:-;;;;;;;;;;-1:-1:-1;2894:137:8;;;;;:::i;:::-;;:::i;2635:102:21:-;;;;;;;;;;;;;:::i;2012:49:8:-;;;;;;;;;;;;;:::i;4268:153:21:-;;;;;;;;;;-1:-1:-1;4268:153:21;;;;;:::i;:::-;;:::i;1471:88:4:-;;;;;;;;;;;;;:::i;5352:320:21:-;;;;;;;;;;-1:-1:-1;5352:320:21;;;;;:::i;:::-;;:::i;2803:329::-;;;;;;;;;;-1:-1:-1;2803:329:21;;;;;:::i;:::-;;:::i;1727:132:9:-;;;;;;;;;;-1:-1:-1;1727:132:9;;;;;:::i;:::-;;:::i;1234:62:29:-;;;;;;;;;;;;;:::i;4727:147:8:-;;;;;;;;;;-1:-1:-1;4727:147:8;;;;;:::i;:::-;;:::i;1302:62:29:-;;;;;;;;;;;;;:::i;4487:162:21:-;;;;;;;;;;-1:-1:-1;4487:162:21;;;;;:::i;:::-;;:::i;1297:93:4:-;;;;;;;;;;;;;:::i;4005:246:29:-;4181:4;4208:36;4232:11;4208:23;:36::i;:::-;4201:43;;4005:246;;;;:::o;2473:98:21:-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;4087:16;4095:7;4087;:16::i;:::-;4079:73;;;;-1:-1:-1;;;4079:73:21;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4170:24:21;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:21;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;-1:-1:-1;;;;;;3659:11:21;;;;;;;;3651:57;;;;-1:-1:-1;;;3651:57:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;3740:21:21;;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3740:21:21;;;:62;;;3765:37;3782:5;3789:12;:10;:12::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:21;;;;;;;:::i;:::-;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3522:401;;;:::o;1838:350:4:-;2028:6;:23;;;;;;;-1:-1:-1;2028:23:4;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2061:13:4;:33;;;;;;;-1:-1:-1;2061:33:4;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2104:5:4;:22;;;;;;;-1:-1:-1;2104:22:4;;;;;;;;;;;;;;;;:::i;:::-;;2173:8;2178:2;2173:4;:8::i;:::-;1838:350;;;;:::o;1615:111:25:-;1702:10;:17;1615:111;:::o;4711:330:21:-;4900:41;4919:12;:10;:12::i;:::-;4933:7;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:21;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;3977:121:8:-;4043:7;4069:12;;;;;;;;;;:22;;;;3977:121::o;4348:145::-;4431:18;4444:4;4431:12;:18::i;:::-;2490:30;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;4461:25:::1;4472:4;4478:7;4461:10;:25::i;1291:253:25:-:0;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1511:19:25;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253;;;;;:::o;5365:214:8:-;5471:12;:10;:12::i;:::-;-1:-1:-1;;;;;5460:23:8;;;;;;5452:83;;;;-1:-1:-1;;;5452:83:8;;;;;;;:::i;:::-;5546:26;5558:4;5564:7;5546:11;:26::i;:::-;5365:214;;:::o;1142:89:4:-;1185:13;1217:7;1210:14;;;;;:::i;3517:182:29:-;3569:34;1340:24;3590:12;:10;:12::i;3569:34::-;3561:111;;;;-1:-1:-1;;;3561:111:29;;;;;;;:::i;:::-;3682:10;:8;:10::i;:::-;3517:182::o;5107:179:21:-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;529:241:24:-;645:41;664:12;:10;:12::i;645:41::-;637:102;;;;-1:-1:-1;;;637:102:24;;;;;;;:::i;:::-;749:14;755:7;749:5;:14::i;:::-;529:241;:::o;1798:230:25:-;1873:7;1908:30;:28;:30::i;:::-;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:25;;;;;;;:::i;:::-;2004:10;2015:5;2004:17;;;;;;-1:-1:-1;;;2004:17:25;;;;;;;;;;;;;;;;;1997:24;;1798:230;;;:::o;1098:84:13:-;1168:7;;;;1098:84;:::o;2399:1058:4:-;2458:13;2492:18;2501:7;2492;:18::i;:::-;2483:50;;;;-1:-1:-1;;;2483:50:4;;;;;;;:::i;:::-;2621:22;2675:6;2682:7;2675:15;;;;;;-1:-1:-1;;;2675:15:4;;;;;;;;;;;;;;;;2646:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;2621:75;;2724:22;2785:13;2799:7;2785:22;;;;;;-1:-1:-1;;;2785:22:4;;;;;;;;;;;;;;;;2749:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;2724:89;;2838:21;2890:5;2896:7;2890:14;;;;;;-1:-1:-1;;;2890:14:4;;;;;;;;;;;;;;;;2862:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;2838:72;;2968:24;3046:9;3078;3110:8;2995:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2968:177;;3255:26;3334:28;3349:11;3334:13;:28::i;:::-;3284:79;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3284:79:4;;;;;;;;;;;-1:-1:-1;;;;;;;2399:1058:4:o;2176:235:21:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:21;;2309:73;;;;-1:-1:-1;;;2309:73:21;;;;;;;:::i;2529:400:29:-;2588:34;1272:24;2609:12;:10;:12::i;2588:34::-;2580:108;;;;-1:-1:-1;;;2580:108:29;;;;;;;:::i;:::-;2849:36;2855:2;2859:25;:15;:23;:25::i;:::-;2849:5;:36::i;:::-;2895:27;:15;:25;:27::i;1914:205:21:-;1986:7;-1:-1:-1;;;;;2013:19:21;;2005:74;;;;-1:-1:-1;;;2005:74:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2096:16:21;;;;;:9;:16;;;;;;;1914:205::o;3133:176:29:-;3183:34;1340:24;3204:12;:10;:12::i;3183:34::-;3175:109;;;;-1:-1:-1;;;3175:109:29;;;;;;;:::i;:::-;3294:8;:6;:8::i;1416:143:9:-;1498:7;1524:18;;;:12;:18;;;;;:28;;1546:5;1524:21;:28::i;:::-;1517:35;1416:143;-1:-1:-1;;;1416:143:9:o;2894:137:8:-;2972:4;2995:12;;;;;;;;;;;-1:-1:-1;;;;;2995:29:8;;;;;;;;;;;;;;;2894:137::o;2635:102:21:-;2691:13;2723:7;2716:14;;;;;:::i;2012:49:8:-;2057:4;2012:49;:::o;4268:153:21:-;4362:52;4381:12;:10;:12::i;:::-;4395:8;4405;4362:18;:52::i;1471:88:4:-;1513:13;1546:6;1539:13;;;;;:::i;5352:320:21:-;5521:41;5540:12;:10;:12::i;:::-;5554:7;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:21;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;2803:329::-;2876:13;2909:16;2917:7;2909;:16::i;:::-;2901:76;;;;-1:-1:-1;;;2901:76:21;;;;;;;:::i;:::-;2988:21;3012:10;:8;:10::i;:::-;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3032:93;2803:329;-1:-1:-1;;;2803:329:21:o;1727:132:9:-;1799:7;1825:18;;;:12;:18;;;;;:27;;:25;:27::i;1234:62:29:-;1272:24;1234:62;:::o;4727:147:8:-;4811:18;4824:4;4811:12;:18::i;:::-;2490:30;2501:4;2507:12;:10;:12::i;2490:30::-;4841:26:::1;4853:4;4859:7;4841:11;:26::i;1302:62:29:-:0;1340:24;1302:62;:::o;4487:162:21:-;-1:-1:-1;;;;;4607:25:21;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162::o;1297:93:4:-;1342:13;1374:9;1367:16;;;;;:::i;6822:233:8:-;6905:22;6913:4;6919:7;6905;:22::i;:::-;6900:149;;6943:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6943:29:8;;;;;;;;;:36;;-1:-1:-1;;6943:36:8;-1:-1:-1;6943:36:8;;;7025:12;:10;:12::i;:::-;6998:40;;-1:-1:-1;;;;;6998:40:8;;;;;;;7010:4;;6998:40;;;;;6822:233;;:::o;7612:150:41:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:41;;7705:4;:50::i;990:222:25:-;1092:4;-1:-1:-1;;;;;;;;;1115:50:25;;;;:90;;;1169:36;1193:11;1169:23;:36::i;7144:125:21:-;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:21;:30;;;7144:125::o;640:96:31:-;719:10;640:96;:::o;10995:171:21:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:21;-1:-1:-1;;;;;11069:29:21;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;11113:46;;-1:-1:-1;;;;;11113:46:21;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7544:16;7552:7;7544;:16::i;:::-;7536:73;;;;-1:-1:-1;;;7536:73:21;;;;;;;:::i;:::-;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;-1:-1:-1;;;;;;7676:16:21;;;;;;;;:51;;-1:-1:-1;;;;;;7696:31:21;;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:21;;7676:51;:87;;;;7731:32;7748:5;7755:7;7731:16;:32::i;:::-;7668:96;7427:344;-1:-1:-1;;;;7427:344:21:o;10324:560::-;-1:-1:-1;;;;;10451:31:21;;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:21;;10443:85;;;;-1:-1:-1;;;10443:85:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;10546:16:21;;10538:65;;;;-1:-1:-1;;;10538:65:21;;;;;;;:::i;:::-;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:21;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;10755:15:21;:20;;-1:-1:-1;;10755:20:21;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:21;;;;;;:9;:13;;;;;:18;;-1:-1:-1;;10785:13:21;:18;;-1:-1:-1;;10785:18:21;:::i;:::-;;;;-1:-1:-1;;10813:16:21;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:21;-1:-1:-1;;;;;10813:21:21;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;3312:484:8:-;3392:22;3400:4;3406:7;3392;:22::i;:::-;3387:403;;3575:41;-1:-1:-1;;;;;3575:41:8;;3613:2;3575:19;:41::i;:::-;3687:38;3715:4;3722:2;3687:19;:38::i;:::-;3482:265;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;3482:265:8;;;;;;;-1:-1:-1;;;3430:349:8;;;;;;;:::i;1947:166:9:-;2034:31;2051:4;2057:7;2034:16;:31::i;:::-;2075:18;;;;:12;:18;;;;;:31;;2098:7;2075:22;:31::i;2202:171::-;2290:32;2308:4;2314:7;2290:17;:32::i;:::-;2332:18;;;;:12;:18;;;;;:34;;2358:7;2332:25;:34::i;2110:117:13:-;1677:8;:6;:8::i;:::-;1669:41;;;;-1:-1:-1;;;1669:41:13;;;;;;;:::i;:::-;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:13::1;::::0;;2198:22:::1;2207:12;:10;:12::i;:::-;2198:22;;;;;;:::i;:::-;;;;;;;;2110:117::o:0;9652:348:21:-;9711:13;9727:23;9742:7;9727:14;:23::i;:::-;9711:39;;9761:48;9782:5;9797:1;9801:7;9761:20;:48::i;:::-;9847:29;9864:1;9868:7;9847:8;:29::i;:::-;-1:-1:-1;;;;;9887:16:21;;;;;;:9;:16;;;;;:21;;-1:-1:-1;;9887:16:21;:21;;-1:-1:-1;;9887:21:21;:::i;:::-;;;;-1:-1:-1;;9925:16:21;;;;:7;:16;;;;;;9918:23;;-1:-1:-1;;;;;;9918:23:21;;;9957:36;9925:16;;;-1:-1:-1;;;;;9957:36:21;;;;;9925:16;;9957:36;9652:348;;:::o;372:1905:6:-;473:11;;430:13;;502:8;498:23;;-1:-1:-1;;512:9:6;;;;;;;;;-1:-1:-1;512:9:6;;;;498:23;578:18;616:1;605:7;:3;611:1;605:7;:::i;:::-;604:13;;;;:::i;:::-;599:19;;:1;:19;:::i;:::-;578:40;-1:-1:-1;681:19:6;713:15;578:40;726:2;713:15;:::i;:::-;703:26;;;;;;-1:-1:-1;;;703:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;703:26:6;;681:48;;744:18;765:5;;;;;;;;;;;;;;;;;744:26;;841:1;834:5;830:13;891:2;883:6;879:15;947:1;914:1005;975:3;972:1;969:10;914:1005;;;1035:1;1079:12;;;;;1073:19;1174:4;1162:2;1158:14;;;;;1140:40;;1134:47;1334:2;1330:14;;;1326:25;;1312:40;;1306:47;1533:1;1529:13;;;1525:24;;1511:39;;1505:46;1723:16;;;;1709:31;;1703:38;1211:1;1207:11;;;1355:4;1302:58;;;1244:136;1406:11;;1501:57;;;1443:135;;;;1604:11;;1699:49;;1641:127;1798:3;1794:13;1827:22;;1897:1;1882:17;;;;1028:9;914:1005;;;918:50;1955:1;1950:3;1946:11;1981:1;1976:90;;;;2090:1;2085:88;;;;1939:234;;1976:90;-1:-1:-1;;;;;2010:17:6;;2003:43;1976:90;;2085:88;-1:-1:-1;;;;;2119:17:6;;2112:41;1939:234;-1:-1:-1;;;2193:26:6;;;;372:1905;-1:-1:-1;;;;372:1905:6:o;827:112:32:-;918:14;;827:112::o;9063:372:21:-;-1:-1:-1;;;;;9142:16:21;;9134:61;;;;-1:-1:-1;;;9134:61:21;;;;;;;:::i;:::-;9214:16;9222:7;9214;:16::i;:::-;9213:17;9205:58;;;;-1:-1:-1;;;9205:58:21;;;;;;;:::i;:::-;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:21;;;;;;:9;:13;;;;;:18;;-1:-1:-1;;9330:13:21;:18;;-1:-1:-1;;9330:18:21;:::i;:::-;;;;-1:-1:-1;;9358:16:21;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:21;-1:-1:-1;;;;;9358:21:21;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;945:123:32:-;1032:19;;1050:1;1032:19;;;945:123::o;1863:115:13:-;1412:8;:6;:8::i;:::-;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:13;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:13::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;:10;:12::i;8870:156:41:-:0;8944:7;8994:22;8998:3;9010:5;8994:3;:22::i;11301:307:21:-;-1:-1:-1;;;;;11442:17:21;;;;;;;;11434:55;;;;-1:-1:-1;;;11434:55:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;11499:25:21;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:21;;;;;;;11560:41;;;;;11499:46;;11560:41;:::i;:::-;;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:21;;;;;;;:::i;2042:112:29:-;2102:13;2134;2127:20;;;;;:::i;328:703:33:-;384:13;601:10;597:51;;-1:-1:-1;627:10:33;;;;;;;;;;;;-1:-1:-1;;;627:10:33;;;;;;597:51;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:33;;-1:-1:-1;773:2:33;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;-1:-1:-1;;;817:17:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:33;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:33;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;-1:-1:-1;;;902:14:33;;;;;;;;;-1:-1:-1;;;;;;902:56:33;;;;;;;;;:14;;;:56;-1:-1:-1;972:11:33;981:2;972:11;;:::i;:::-;;;844:150;;8413:115:41;8476:7;8502:19;8510:3;8502:7;:19::i;1697:404::-;1760:4;1781:21;1791:3;1796:5;1781:9;:21::i;:::-;1776:319;;-1:-1:-1;1818:23:41;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:41;2072:12;;1555:300:21;1657:4;-1:-1:-1;;;;;;;;;1692:40:21;;;;:104;;-1:-1:-1;;;;;;;;;;1748:48:21;;;1692:104;:156;;;;1812:36;1836:11;1812:23;:36::i;3705:233:29:-;3886:45;3913:4;3919:2;3923:7;3886:26;:45::i;1588:441:33:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;-1:-1:-1;;;1710:25:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:33;;1688:47;;-1:-1:-1;;;1745:6:33;1752:1;1745:9;;;;;;-1:-1:-1;;;1745:9:33;;;;;;;;;-1:-1:-1;;;;;;1745:15:33;;;;;;;;;:9;;;:15;;-1:-1:-1;;;1770:6:33;1777:1;1770:9;;;;;;-1:-1:-1;;;1770:9:33;;;;;;;;;-1:-1:-1;;;;;;1770:15:33;;;;;;;;;:9;;;:15;-1:-1:-1;1800:9:33;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1887:3:33;1879:11;;1866:25;;;;;-1:-1:-1;;;1866:25:33;;;;;;;;;;;;1854:6;1861:1;1854:9;;;;;;-1:-1:-1;;;1854:9:33;;;;;;;;;-1:-1:-1;;;;;;1854:37:33;;;;;;;;;:9;;;:37;-1:-1:-1;1915:1:33;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:33;;1936:55;;;;-1:-1:-1;;;1936:55:33;;;;;;;:::i;7180:234:8:-;7263:22;7271:4;7277:7;7263;:22::i;:::-;7259:149;;;7333:5;7301:12;;;;;;;;;;;-1:-1:-1;;;;;7301:29:8;;;;;;;;;:37;;-1:-1:-1;;7301:37:8;;;7384:12;:10;:12::i;:::-;7357:40;;-1:-1:-1;;;;;7357:40:8;;;;;;;7369:4;;7357:40;;;;;7180:234;;:::o;7930:156:41:-;8003:4;8026:53;8034:3;-1:-1:-1;;;;;8054:23:41;;8026:7;:53::i;4395:118::-;4462:7;4488:3;:11;;4500:5;4488:18;;;;;;-1:-1:-1;;;4488:18:41;;;;;;;;;;;;;;;;;4481:25;;4395:118;;;;:::o;12161:778:21:-;12311:4;12331:15;-1:-1:-1;;;;;12331:13:21;;;:15::i;:::-;12327:606;;;-1:-1:-1;;;;;12366:36:21;;;12403:12;:10;:12::i;:::-;12417:4;12423:7;12432:5;12366:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:21;;;;;;;;-1:-1:-1;;12366:72:21;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:21;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:21;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:21;-1:-1:-1;;;12488:51:21;;-1:-1:-1;12481:58:21;;12327:606;-1:-1:-1;12918:4:21;12161:778;;;;;;:::o;3738:127:41:-;3811:4;3834:19;;;:12;;;;;:19;;;;;;:24;;;3738:127::o;619:212:9:-;704:4;-1:-1:-1;;;;;;;;;727:57:9;;;;:97;;;788:36;812:11;788:23;:36::i;672:267:26:-;811:45;838:4;844:2;848:7;811:26;:45::i;:::-;876:8;:6;:8::i;:::-;875:9;867:65;;;;-1:-1:-1;;;867:65:26;;;;;;;:::i;2269:1388:41:-;2335:4;2472:19;;;:12;;;:19;;;;;;2506:15;;2502:1149;;2875:21;2899:14;2912:1;2899:10;:14;:::i;:::-;2947:18;;2875:38;;-1:-1:-1;2927:17:41;;2947:22;;2968:1;;2947:22;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;-1:-1:-1;;;3054:22:41;;;;;;;;;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;-1:-1:-1;;;3176:26:41;;;;;;;;;;;;;;;;;;;;:38;;;;3288:23;;;:12;;;:23;;;;;:36;;;2984:398;3460:17;;:3;;:17;;;-1:-1:-1;;;3460:17:41;;;;;;;;;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;;;771:377:30;1087:20;1133:8;;;771:377::o;2605:202:8:-;2690:4;-1:-1:-1;;;;;;;;;2713:47:8;;;;:87;;;2764:36;2788:11;2764:23;:36::i;2624:572:25:-;2763:45;2790:4;2796:2;2800:7;2763:26;:45::i;:::-;-1:-1:-1;;;;;2823:18:25;;2819:183;;2857:40;2889:7;2857:31;:40::i;:::-;2819:183;;;-1:-1:-1;;;;;2918:10:25;;;;;;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:25;;3011:179;;3047:45;3084:7;3047:36;:45::i;:::-;3011:179;;;-1:-1:-1;;;;;3113:10:25;;;;;;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;829:155:36:-;-1:-1:-1;;;;;;937:40:36;-1:-1:-1;;;937:40:36;;829:155::o;3902:161:25:-;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161::o;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:25;;;5150:323;;-1:-1:-1;;;;;5220:18:25;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:25;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:25;;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:25;;6187:46;;6632:26;;;;-1:-1:-1;;;6632:26:25;;;;;;;;;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;-1:-1:-1;;;6669:22:25;;;;;;;;;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;-1:-1:-1;;;6976:16:25;;;;;;;;;;;;;;;;;;;;;;;;;;5938:1061;;;;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:25;;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:25:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:607:42;;110:18;151:2;143:6;140:14;137:2;;;157:18;;:::i;:::-;206:2;200:9;286:4;-1:-1:-1;;279:2:42;256:17;;252:31;240:44;;236:55;326:22;;;306:18;;;303:46;300:2;;;352:18;;:::i;:::-;388:2;381:22;436;;;421:6;-1:-1:-1;421:6:42;473:16;;;470:25;-1:-1:-1;467:2:42;;;508:1;505;498:12;467:2;558:6;553:3;546:4;538:6;534:17;521:44;613:1;606:4;597:6;589;585:19;581:30;574:41;;;90:531;;;;;:::o;626:175::-;696:20;;-1:-1:-1;;;;;745:31:42;;735:42;;725:2;;791:1;788;781:12;806:233;;904:3;897:4;889:6;885:17;881:27;871:2;;926:5;919;912:20;871:2;952:81;1029:3;1020:6;1007:20;1000:4;992:6;988:17;952:81;:::i;1044:198::-;;1156:2;1144:9;1135:7;1131:23;1127:32;1124:2;;;1177:6;1169;1162:22;1124:2;1205:31;1226:9;1205:31;:::i;1247:274::-;;;1376:2;1364:9;1355:7;1351:23;1347:32;1344:2;;;1397:6;1389;1382:22;1344:2;1425:31;1446:9;1425:31;:::i;:::-;1415:41;;1475:40;1511:2;1500:9;1496:18;1475:40;:::i;:::-;1465:50;;1334:187;;;;;:::o;1526:342::-;;;;1672:2;1660:9;1651:7;1647:23;1643:32;1640:2;;;1693:6;1685;1678:22;1640:2;1721:31;1742:9;1721:31;:::i;:::-;1711:41;;1771:40;1807:2;1796:9;1792:18;1771:40;:::i;:::-;1761:50;;1858:2;1847:9;1843:18;1830:32;1820:42;;1630:238;;;;;:::o;1873:702::-;;;;;2045:3;2033:9;2024:7;2020:23;2016:33;2013:2;;;2067:6;2059;2052:22;2013:2;2095:31;2116:9;2095:31;:::i;:::-;2085:41;;2145:40;2181:2;2170:9;2166:18;2145:40;:::i;:::-;2135:50;;2232:2;2221:9;2217:18;2204:32;2194:42;;2287:2;2276:9;2272:18;2259:32;2314:18;2306:6;2303:30;2300:2;;;2351:6;2343;2336:22;2300:2;2379:22;;2432:4;2424:13;;2420:27;-1:-1:-1;2410:2:42;;2466:6;2458;2451:22;2410:2;2494:75;2561:7;2556:2;2543:16;2538:2;2534;2530:11;2494:75;:::i;:::-;2484:85;;;2003:572;;;;;;;:::o;2580:369::-;;;2706:2;2694:9;2685:7;2681:23;2677:32;2674:2;;;2727:6;2719;2712:22;2674:2;2755:31;2776:9;2755:31;:::i;:::-;2745:41;;2836:2;2825:9;2821:18;2808:32;2883:5;2876:13;2869:21;2862:5;2859:32;2849:2;;2910:6;2902;2895:22;2849:2;2938:5;2928:15;;;2664:285;;;;;:::o;2954:866::-;;;;;3147:3;3135:9;3126:7;3122:23;3118:33;3115:2;;;3169:6;3161;3154:22;3115:2;3197:31;3218:9;3197:31;:::i;:::-;3187:41;;3279:2;3268:9;3264:18;3251:32;3302:18;3343:2;3335:6;3332:14;3329:2;;;3364:6;3356;3349:22;3329:2;3392:52;3436:7;3427:6;3416:9;3412:22;3392:52;:::i;:::-;3382:62;;3497:2;3486:9;3482:18;3469:32;3453:48;;3526:2;3516:8;3513:16;3510:2;;;3547:6;3539;3532:22;3510:2;3575:54;3621:7;3610:8;3599:9;3595:24;3575:54;:::i;:::-;3565:64;;3682:2;3671:9;3667:18;3654:32;3638:48;;3711:2;3701:8;3698:16;3695:2;;;3732:6;3724;3717:22;3695:2;;3760:54;3806:7;3795:8;3784:9;3780:24;3760:54;:::i;3825:266::-;;;3954:2;3942:9;3933:7;3929:23;3925:32;3922:2;;;3975:6;3967;3960:22;3922:2;4003:31;4024:9;4003:31;:::i;:::-;3993:41;4081:2;4066:18;;;;4053:32;;-1:-1:-1;;;3912:179:42:o;4096:190::-;;4208:2;4196:9;4187:7;4183:23;4179:32;4176:2;;;4229:6;4221;4214:22;4176:2;-1:-1:-1;4257:23:42;;4166:120;-1:-1:-1;4166:120:42:o;4291:266::-;;;4420:2;4408:9;4399:7;4395:23;4391:32;4388:2;;;4441:6;4433;4426:22;4388:2;4482:9;4469:23;4459:33;;4511:40;4547:2;4536:9;4532:18;4511:40;:::i;4562:258::-;;;4691:2;4679:9;4670:7;4666:23;4662:32;4659:2;;;4712:6;4704;4697:22;4659:2;-1:-1:-1;;4740:23:42;;;4810:2;4795:18;;;4782:32;;-1:-1:-1;4649:171:42:o;4825:257::-;;4936:2;4924:9;4915:7;4911:23;4907:32;4904:2;;;4957:6;4949;4942:22;4904:2;5001:9;4988:23;5020:32;5046:5;5020:32;:::i;5087:261::-;;5209:2;5197:9;5188:7;5184:23;5180:32;5177:2;;;5230:6;5222;5215:22;5177:2;5267:9;5261:16;5286:32;5312:5;5286:32;:::i;5548:259::-;;5629:5;5623:12;5656:6;5651:3;5644:19;5672:63;5728:6;5721:4;5716:3;5712:14;5705:4;5698:5;5694:16;5672:63;:::i;:::-;5789:2;5768:15;-1:-1:-1;;5764:29:42;5755:39;;;;5796:4;5751:50;;5599:208;-1:-1:-1;;5599:208:42:o;5812:982::-;5899:12;;5812:982;;5971:1;5956:17;;5992:1;6028:18;;;;6055:2;;6109:4;6101:6;6097:17;6087:27;;6055:2;6135;6183;6175:6;6172:14;6152:18;6149:38;6146:2;;;-1:-1:-1;;;6210:33:42;;6266:4;6263:1;6256:15;6296:4;6210:33;6284:17;6146:2;6327:18;6354:104;;;;6472:1;6467:321;;;;6320:468;;6354:104;-1:-1:-1;;6387:24:42;;6375:37;;6432:16;;;;-1:-1:-1;6354:104:42;;6467:321;6503:38;6535:5;6503:38;:::i;:::-;6563:1;6577:165;6591:6;6588:1;6585:13;6577:165;;;6669:14;;6656:11;;;6649:35;6712:16;;;;6606:10;;6577:165;;;6581:3;;6771:6;6766:3;6762:16;6755:23;;6320:468;;;;;;;5872:922;;;;:::o;6799:470::-;;7016:6;7010:13;7032:53;7078:6;7073:3;7066:4;7058:6;7054:17;7032:53;:::i;:::-;7148:13;;7107:16;;;;7170:57;7148:13;7107:16;7204:4;7192:17;;7170:57;:::i;:::-;7243:20;;6986:283;-1:-1:-1;;;;6986:283:42:o;7274:536::-;-1:-1:-1;;;7622:55:42;;7274:536;7696:49;7741:2;7732:12;;7724:6;7696:49;:::i;:::-;-1:-1:-1;;;7754:24:42;;7802:1;7794:10;;;-1:-1:-1;;;7612:198:42:o;7815:521::-;-1:-1:-1;;;8163:41:42;;7815:521;8223:48;8268:1;8259:11;;8251:6;8223:48;:::i;8341:519::-;-1:-1:-1;;;8689:39:42;;8341:519;8747:48;8792:1;8783:11;;8775:6;8747:48;:::i;8865:1238::-;-1:-1:-1;;;9508:16:42;;9547:13;;8865:1238;;9569:61;9547:13;9619:1;9610:11;;9603:4;9591:17;;9569:61;:::i;:::-;-1:-1:-1;;;9711:1:42;9649:16;;;9703:10;;;9696:22;;;9743:13;;9765:62;9743:13;9814:1;9806:10;;9799:4;9787:17;;9765:62;:::i;:::-;9887:1;9846:17;;9879:10;;;9872:22;9919:13;;9941:62;9919:13;9990:1;9982:10;;9975:4;9963:17;;9941:62;:::i;:::-;-1:-1:-1;;;10022:17:42;;10063:1;10055:10;;10048:23;;;;10095:1;10087:10;;;-1:-1:-1;;;;;9498:605:42:o;10108:448::-;;10370:31;10365:3;10358:44;10431:6;10425:13;10447:62;10502:6;10497:2;10492:3;10488:12;10481:4;10473:6;10469:17;10447:62;:::i;:::-;10529:16;;;;10547:2;10525:25;;10348:208;-1:-1:-1;;10348:208:42:o;10561:786::-;;10972:25;10967:3;10960:38;11027:6;11021:13;11043:62;11098:6;11093:2;11088:3;11084:12;11077:4;11069:6;11065:17;11043:62;:::i;:::-;-1:-1:-1;;;11164:2:42;11124:16;;;11156:11;;;11149:40;11214:13;;11236:63;11214:13;11285:2;11277:11;;11270:4;11258:17;;11236:63;:::i;:::-;11319:17;11338:2;11315:26;;10950:397;-1:-1:-1;;;;10950:397:42:o;11352:203::-;-1:-1:-1;;;;;11516:32:42;;;;11498:51;;11486:2;11471:18;;11453:102::o;11560:490::-;-1:-1:-1;;;;;11829:15:42;;;11811:34;;11881:15;;11876:2;11861:18;;11854:43;11928:2;11913:18;;11906:34;;;11976:3;11971:2;11956:18;;11949:31;;;-1:-1:-1;;11997:47:42;;12024:19;;12016:6;11997:47;:::i;:::-;11989:55;11763:287;-1:-1:-1;;;;;;11763:287:42:o;12055:187::-;12220:14;;12213:22;12195:41;;12183:2;12168:18;;12150:92::o;12247:177::-;12393:25;;;12381:2;12366:18;;12348:76::o;12429:221::-;;12578:2;12567:9;12560:21;12598:46;12640:2;12629:9;12625:18;12617:6;12598:46;:::i;12655:356::-;12857:2;12839:21;;;12876:18;;;12869:30;12935:34;12930:2;12915:18;;12908:62;13002:2;12987:18;;12829:182::o;13016:407::-;13218:2;13200:21;;;13257:2;13237:18;;;13230:30;13296:34;13291:2;13276:18;;13269:62;-1:-1:-1;;;13362:2:42;13347:18;;13340:41;13413:3;13398:19;;13190:233::o;13428:344::-;13630:2;13612:21;;;13669:2;13649:18;;;13642:30;-1:-1:-1;;;13703:2:42;13688:18;;13681:50;13763:2;13748:18;;13602:170::o;13777:407::-;13979:2;13961:21;;;14018:2;13998:18;;;13991:30;14057:34;14052:2;14037:18;;14030:62;-1:-1:-1;;;14123:2:42;14108:18;;14101:41;14174:3;14159:19;;13951:233::o;14189:414::-;14391:2;14373:21;;;14430:2;14410:18;;;14403:30;14469:34;14464:2;14449:18;;14442:62;-1:-1:-1;;;14535:2:42;14520:18;;14513:48;14593:3;14578:19;;14363:240::o;14608:352::-;14810:2;14792:21;;;14849:2;14829:18;;;14822:30;14888;14883:2;14868:18;;14861:58;14951:2;14936:18;;14782:178::o;14965:426::-;15167:2;15149:21;;;15206:2;15186:18;;;15179:30;15245:34;15240:2;15225:18;;15218:62;15316:32;15311:2;15296:18;;15289:60;15381:3;15366:19;;15139:252::o;15396:400::-;15598:2;15580:21;;;15637:2;15617:18;;;15610:30;15676:34;15671:2;15656:18;;15649:62;-1:-1:-1;;;15742:2:42;15727:18;;15720:34;15786:3;15771:19;;15570:226::o;15801:349::-;16003:2;15985:21;;;16042:2;16022:18;;;16015:30;16081:27;16076:2;16061:18;;16054:55;16141:2;16126:18;;15975:175::o;16155:408::-;16357:2;16339:21;;;16396:2;16376:18;;;16369:30;16435:34;16430:2;16415:18;;16408:62;-1:-1:-1;;;16501:2:42;16486:18;;16479:42;16553:3;16538:19;;16329:234::o;16568:340::-;16770:2;16752:21;;;16809:2;16789:18;;;16782:30;-1:-1:-1;;;16843:2:42;16828:18;;16821:46;16899:2;16884:18;;16742:166::o;16913:420::-;17115:2;17097:21;;;17154:2;17134:18;;;17127:30;17193:34;17188:2;17173:18;;17166:62;17264:26;17259:2;17244:18;;17237:54;17323:3;17308:19;;17087:246::o;17338:406::-;17540:2;17522:21;;;17579:2;17559:18;;;17552:30;17618:34;17613:2;17598:18;;17591:62;-1:-1:-1;;;17684:2:42;17669:18;;17662:40;17734:3;17719:19;;17512:232::o;17749:405::-;17951:2;17933:21;;;17990:2;17970:18;;;17963:30;18029:34;18024:2;18009:18;;18002:62;-1:-1:-1;;;18095:2:42;18080:18;;18073:39;18144:3;18129:19;;17923:231::o;18159:356::-;18361:2;18343:21;;;18380:18;;;18373:30;18439:34;18434:2;18419:18;;18412:62;18506:2;18491:18;;18333:182::o;18520:408::-;18722:2;18704:21;;;18761:2;18741:18;;;18734:30;18800:34;18795:2;18780:18;;18773:62;-1:-1:-1;;;18866:2:42;18851:18;;18844:42;18918:3;18903:19;;18694:234::o;18933:405::-;19135:2;19117:21;;;19174:2;19154:18;;;19147:30;19213:34;19208:2;19193:18;;19186:62;-1:-1:-1;;;19279:2:42;19264:18;;19257:39;19328:3;19313:19;;19107:231::o;19343:411::-;19545:2;19527:21;;;19584:2;19564:18;;;19557:30;19623:34;19618:2;19603:18;;19596:62;-1:-1:-1;;;19689:2:42;19674:18;;19667:45;19744:3;19729:19;;19517:237::o;19759:397::-;19961:2;19943:21;;;20000:2;19980:18;;;19973:30;20039:34;20034:2;20019:18;;20012:62;-1:-1:-1;;;20105:2:42;20090:18;;20083:31;20146:3;20131:19;;19933:223::o;20161:413::-;20363:2;20345:21;;;20402:2;20382:18;;;20375:30;20441:34;20436:2;20421:18;;20414:62;-1:-1:-1;;;20507:2:42;20492:18;;20485:47;20564:3;20549:19;;20335:239::o;20579:408::-;20781:2;20763:21;;;20820:2;20800:18;;;20793:30;20859:34;20854:2;20839:18;;20832:62;-1:-1:-1;;;20925:2:42;20910:18;;20903:42;20977:3;20962:19;;20753:234::o;20992:425::-;21194:2;21176:21;;;21233:2;21213:18;;;21206:30;21272:34;21267:2;21252:18;;21245:62;21343:31;21338:2;21323:18;;21316:59;21407:3;21392:19;;21166:251::o;21422:341::-;21624:2;21606:21;;;21663:2;21643:18;;;21636:30;-1:-1:-1;;;21697:2:42;21682:18;;21675:47;21754:2;21739:18;;21596:167::o;21768:412::-;21970:2;21952:21;;;22009:2;21989:18;;;21982:30;22048:34;22043:2;22028:18;;22021:62;-1:-1:-1;;;22114:2:42;22099:18;;22092:46;22170:3;22155:19;;21942:238::o;22185:428::-;22387:2;22369:21;;;22426:2;22406:18;;;22399:30;;;22465:34;22445:18;;;22438:62;22536:34;22531:2;22516:18;;22509:62;22603:3;22588:19;;22359:254::o;22618:411::-;22820:2;22802:21;;;22859:2;22839:18;;;22832:30;22898:34;22893:2;22878:18;;22871:62;-1:-1:-1;;;22964:2:42;22949:18;;22942:45;23019:3;23004:19;;22792:237::o;23216:129::-;;23284:17;;;23334:4;23318:21;;;23274:71::o;23350:128::-;;23421:1;23417:6;23414:1;23411:13;23408:2;;;23427:18;;:::i;:::-;-1:-1:-1;23463:9:42;;23398:80::o;23483:120::-;;23549:1;23539:2;;23554:18;;:::i;:::-;-1:-1:-1;23588:9:42;;23529:74::o;23608:168::-;;23714:1;23710;23706:6;23702:14;23699:1;23696:21;23691:1;23684:9;23677:17;23673:45;23670:2;;;23721:18;;:::i;:::-;-1:-1:-1;23761:9:42;;23660:116::o;23781:125::-;;23849:1;23846;23843:8;23840:2;;;23854:18;;:::i;:::-;-1:-1:-1;23891:9:42;;23830:76::o;23911:258::-;23983:1;23993:113;24007:6;24004:1;24001:13;23993:113;;;24083:11;;;24077:18;24064:11;;;24057:39;24029:2;24022:10;23993:113;;;24124:6;24121:1;24118:13;24115:2;;;-1:-1:-1;;24159:1:42;24141:16;;24134:27;23964:205::o;24174:136::-;;24241:5;24231:2;;24250:18;;:::i;:::-;-1:-1:-1;;;24286:18:42;;24221:89::o;24315:380::-;24400:1;24390:12;;24447:1;24437:12;;;24458:2;;24512:4;24504:6;24500:17;24490:27;;24458:2;24565;24557:6;24554:14;24534:18;24531:38;24528:2;;;24611:10;24606:3;24602:20;24599:1;24592:31;24646:4;24643:1;24636:15;24674:4;24671:1;24664:15;24528:2;;24370:325;;;:::o;24700:135::-;;-1:-1:-1;;24760:17:42;;24757:2;;;24780:18;;:::i;:::-;-1:-1:-1;24827:1:42;24816:13;;24747:88::o;24840:112::-;;24898:1;24888:2;;24903:18;;:::i;:::-;-1:-1:-1;24937:9:42;;24878:74::o;24957:127::-;25018:10;25013:3;25009:20;25006:1;24999:31;25049:4;25046:1;25039:15;25073:4;25070:1;25063:15;25089:127;25150:10;25145:3;25141:20;25138:1;25131:31;25181:4;25178:1;25171:15;25205:4;25202:1;25195:15;25221:127;25282:10;25277:3;25273:20;25270:1;25263:31;25313:4;25310:1;25303:15;25337:4;25334:1;25327:15;25353:133;-1:-1:-1;;;;;;25429:32:42;;25419:43;;25409:2;;25476:1;25473;25466:12",
  "source": "/**\n * NFTを発行するためのコントラクトを実装したファイル\n */\n\n// SPDX-License-Identifier: MIT\npragma solidity >0.4.23;\n\n// 必要なモジュールをインポートする。\nimport \"@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol\";\nimport \"./common/Base64.sol\";\n\n/**\n * NFTコントラクトを定義する。\n * (ERC721PresetMinterPauserAutoIdを継承して実装)\n */\ncontract NFT is ERC721PresetMinterPauserAutoId {\n\n    // NFT名\n    string nftName;\n    // シンボル名\n    string nftSymbol;\n    // URL\n    string nftUrl;\n\n    // NFTトークンIDと紐付けて保存するデータ\n    // 名前、説明、URL\n    string[] private _names;\n    string[] private _descriptions;\n    string[] private _urls;\n\n    /**\n     * コンストラクター \n     */\n    constructor(string memory name_, string memory symbol_, string memory url_) ERC721PresetMinterPauserAutoId(name_, symbol_, url_) {\n        // それぞれ値をセットする。\n        nftName = name_;\n        nftSymbol = symbol_;\n        nftUrl = url_;\n    }\n\n    /**\n     * NFT名を取得する関数\n     */\n    function getNftName() view public returns (string memory) {\n        return nftName;\n    }\n\n    /**\n     * シンボル名を取得する関数\n     */\n    function getNftSymbol() view public returns (string memory) {\n        return nftSymbol;\n    }\n\n    /**\n     * NFTに紐づけられているURLを取得する。\n     */\n    function getNftURL() view public returns (string memory) { \n        return nftUrl;\n    }\n    \n    /**\n     * アドレスに対してNFTを発行する関数\n     * @param to 発行先アドレス\n     * @param tokenName_ トークンIDに割り振られる名前\n     * @param description_ 説明\n     * @param tokenUrl_ トークンIDに紐づけるURL\n     */\n    function mintNft(address to, string memory tokenName_, string memory description_, string memory tokenUrl_) public payable {\n        // 名前、説明、URLをそれぞれセット\n        _names.push(tokenName_);\n        _descriptions.push(description_ );\n        _urls.push(tokenUrl_ );\n        // mint関数の呼び出し\n        mint(to);\n    }\n\n    /**\n     * トークンIDに紐づくメタデータを取得する関数\n     * @param tokenId トークンID\n     * @return bytesMetadata メタデータを格納したJSONオブジェクト\n     */\n    function getMetaData(uint256 tokenId) public view returns (string memory) {\n        require( _exists( tokenId ), \"nonexsitent token\" );\n\n        // トークンIDからデータを取得する。\n        // 名前\n        bytes memory bytesName = abi.encodePacked('\"name\":\"', _names[tokenId], '\"');\n        // 説明\n        bytes memory bytesDesc = abi.encodePacked('\"description\":\"', _descriptions[tokenId], '\"');\n        // URL\n        bytes memory bytesUrl = abi.encodePacked('\"URL\":\"', _urls[tokenId], '\"');\n        // 取得した要素を結合する。\n        bytes memory bytesObject = abi.encodePacked(\n            '{',\n                bytesName, ',',\n                bytesDesc, ',',\n                bytesUrl,\n            '}'\n        );\n        // jsonオブジェクトをBase64エンコードしてコンテンツタイプをする。\n        bytes memory bytesMetadata = abi.encodePacked('data:application/json;base64,', Base64.encode( bytesObject ));\n        // 文字列として返却する。\n        return (string( bytesMetadata ));\n    }\n}",
  "sourcePath": "/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/NFT.sol",
  "ast": {
    "absolutePath": "/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/NFT.sol",
    "exportedSymbols": {
      "AccessControl": [
        1847
      ],
      "AccessControlEnumerable": [
        1972
      ],
      "Address": [
        5761
      ],
      "Base64": [
        1172
      ],
      "Context": [
        5783
      ],
      "Counters": [
        5857
      ],
      "ERC165": [
        6628
      ],
      "ERC721": [
        4679
      ],
      "ERC721Burnable": [
        4843
      ],
      "ERC721Enumerable": [
        5181
      ],
      "ERC721Pausable": [
        5218
      ],
      "ERC721PresetMinterPauserAutoId": [
        5464
      ],
      "EnumerableSet": [
        8032
      ],
      "IAccessControl": [
        2045
      ],
      "IAccessControlEnumerable": [
        2070
      ],
      "IERC165": [
        6640
      ],
      "IERC721": [
        4795
      ],
      "IERC721Enumerable": [
        5249
      ],
      "IERC721Metadata": [
        5276
      ],
      "IERC721Receiver": [
        4813
      ],
      "NFT": [
        945
      ],
      "Pausable": [
        2267
      ],
      "Strings": [
        6060
      ]
    },
    "id": 946,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 755,
        "literals": [
          "solidity",
          ">",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "117:24:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
        "file": "@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
        "id": 756,
        "nodeType": "ImportDirective",
        "scope": 946,
        "sourceUnit": 5465,
        "src": "198:89:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/common/Base64.sol",
        "file": "./common/Base64.sol",
        "id": 757,
        "nodeType": "ImportDirective",
        "scope": 946,
        "sourceUnit": 1173,
        "src": "288:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 759,
              "name": "ERC721PresetMinterPauserAutoId",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5464,
              "src": "443:30:4"
            },
            "id": 760,
            "nodeType": "InheritanceSpecifier",
            "src": "443:30:4"
          }
        ],
        "contractDependencies": [
          1847,
          1972,
          2045,
          2070,
          2267,
          4679,
          4795,
          4843,
          5181,
          5218,
          5249,
          5276,
          5464,
          5783,
          6628,
          6640
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 758,
          "nodeType": "StructuredDocumentation",
          "src": "319:107:4",
          "text": " NFTコントラクトを定義する。\n (ERC721PresetMinterPauserAutoIdを継承して実装)"
        },
        "fullyImplemented": true,
        "id": 945,
        "linearizedBaseContracts": [
          945,
          5464,
          5218,
          2267,
          4843,
          5181,
          5249,
          4679,
          5276,
          4795,
          1972,
          1847,
          6628,
          6640,
          2070,
          2045,
          5783
        ],
        "name": "NFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 762,
            "mutability": "mutable",
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "495:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 761,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "495:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 764,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "538:16:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 763,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "538:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 766,
            "mutability": "mutable",
            "name": "nftUrl",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "571:13:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 765,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "571:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 769,
            "mutability": "mutable",
            "name": "_names",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "681:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 767,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "681:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 768,
              "nodeType": "ArrayTypeName",
              "src": "681:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 772,
            "mutability": "mutable",
            "name": "_descriptions",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "710:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 770,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "710:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 771,
              "nodeType": "ArrayTypeName",
              "src": "710:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 775,
            "mutability": "mutable",
            "name": "_urls",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "746:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 773,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "746:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 774,
              "nodeType": "ArrayTypeName",
              "src": "746:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "953:132:4",
              "statements": [
                {
                  "expression": {
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 790,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "1011:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 791,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "1021:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1011:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:15:4"
                },
                {
                  "expression": {
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 794,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "1036:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 795,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 780,
                      "src": "1048:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1036:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:19:4"
                },
                {
                  "expression": {
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 798,
                      "name": "nftUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "1065:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 799,
                      "name": "url_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "1074:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1065:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:13:4"
                }
              ]
            },
            "documentation": {
              "id": 776,
              "nodeType": "StructuredDocumentation",
              "src": "775:44:4",
              "text": " コンストラクター "
            },
            "id": 803,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 785,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 778,
                    "src": "931:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 786,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 780,
                    "src": "938:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 787,
                    "name": "url_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 782,
                    "src": "947:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 788,
                "modifierName": {
                  "id": 784,
                  "name": "ERC721PresetMinterPauserAutoId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5464,
                  "src": "900:30:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "900:52:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "836:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "857:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "url_",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "880:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:64:4"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:0:4"
            },
            "scope": 945,
            "src": "824:261:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 811,
              "nodeType": "Block",
              "src": "1200:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 809,
                    "name": "nftName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 762,
                    "src": "1217:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 808,
                  "id": 810,
                  "nodeType": "Return",
                  "src": "1210:14:4"
                }
              ]
            },
            "documentation": {
              "id": 804,
              "nodeType": "StructuredDocumentation",
              "src": "1091:46:4",
              "text": " NFT名を取得する関数"
            },
            "functionSelector": "3bbdbee0",
            "id": 812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1161:2:4"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "1185:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1184:15:4"
            },
            "scope": 945,
            "src": "1142:89:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 820,
              "nodeType": "Block",
              "src": "1357:33:4",
              "statements": [
                {
                  "expression": {
                    "id": 818,
                    "name": "nftSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 764,
                    "src": "1374:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 817,
                  "id": 819,
                  "nodeType": "Return",
                  "src": "1367:16:4"
                }
              ]
            },
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "1237:55:4",
              "text": " シンボル名を取得する関数"
            },
            "functionSelector": "f7b5c5b6",
            "id": 821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftSymbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:2:4"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "1342:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:15:4"
            },
            "scope": 945,
            "src": "1297:93:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "1528:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 827,
                    "name": "nftUrl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 766,
                    "src": "1546:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 826,
                  "id": 828,
                  "nodeType": "Return",
                  "src": "1539:13:4"
                }
              ]
            },
            "documentation": {
              "id": 822,
              "nodeType": "StructuredDocumentation",
              "src": "1396:70:4",
              "text": " NFTに紐づけられているURLを取得する。"
            },
            "functionSelector": "b722720d",
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftURL",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1489:2:4"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "1513:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1512:15:4"
            },
            "scope": 945,
            "src": "1471:88:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "1961:227:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 845,
                        "name": "tokenName_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "2040:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 842,
                        "name": "_names",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "2028:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2028:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2028:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:23:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 851,
                        "name": "description_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 837,
                        "src": "2080:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 848,
                        "name": "_descriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "2061:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2061:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:33:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 857,
                        "name": "tokenUrl_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "2115:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 854,
                        "name": "_urls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "2104:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2104:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2104:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "2104:22:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 861,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "2178:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 860,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5389,
                      "src": "2173:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:8:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:8:4"
                }
              ]
            },
            "documentation": {
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "1569:264:4",
              "text": " アドレスに対してNFTを発行する関数\n @param to 発行先アドレス\n @param tokenName_ トークンIDに割り振られる名前\n @param description_ 説明\n @param tokenUrl_ トークンIDに紐づけるURL"
            },
            "functionSelector": "11ece751",
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "1855:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "tokenName_",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "1867:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1867:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "description_",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "1893:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "tokenUrl_",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "1921:23:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1854:91:4"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1961:0:4"
            },
            "scope": 945,
            "src": "1838:350:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "2473:984:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 875,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "2501:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 874,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4287,
                          "src": "2492:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2492:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f6e6578736974656e7420746f6b656e",
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2512:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edd488bf416c3ee33e713cda3c438c4b52bfc8cfee05139096c2a75f3acbc312",
                          "typeString": "literal_string \"nonexsitent token\""
                        },
                        "value": "nonexsitent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edd488bf416c3ee33e713cda3c438c4b52bfc8cfee05139096c2a75f3acbc312",
                          "typeString": "literal_string \"nonexsitent token\""
                        }
                      ],
                      "id": 873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2483:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:50:4"
                },
                {
                  "assignments": [
                    881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 881,
                      "mutability": "mutable",
                      "name": "bytesName",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "2621:22:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 880,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2621:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "226e616d65223a22",
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2663:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f",
                          "typeString": "literal_string \"\"name\":\"\""
                        },
                        "value": "\"name\":\""
                      },
                      {
                        "baseExpression": {
                          "id": 885,
                          "name": "_names",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "2675:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 887,
                        "indexExpression": {
                          "id": 886,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "2682:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2675:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "hexValue": "22",
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2692:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        },
                        "value": "\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f",
                          "typeString": "literal_string \"\"name\":\"\""
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        }
                      ],
                      "expression": {
                        "id": 882,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2646:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2646:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2621:75:4"
                },
                {
                  "assignments": [
                    892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 892,
                      "mutability": "mutable",
                      "name": "bytesDesc",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "2724:22:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 891,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2724:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 901,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "226465736372697074696f6e223a22",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2766:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7",
                          "typeString": "literal_string \"\"description\":\"\""
                        },
                        "value": "\"description\":\""
                      },
                      {
                        "baseExpression": {
                          "id": 896,
                          "name": "_descriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "2785:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 898,
                        "indexExpression": {
                          "id": 897,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "2799:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2785:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "hexValue": "22",
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2809:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        },
                        "value": "\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7",
                          "typeString": "literal_string \"\"description\":\"\""
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        }
                      ],
                      "expression": {
                        "id": 893,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2749:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2749:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2724:89:4"
                },
                {
                  "assignments": [
                    903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 903,
                      "mutability": "mutable",
                      "name": "bytesUrl",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "2838:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 902,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2838:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 912,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "2255524c223a22",
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2879:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63aa528e6e82a91184c57d20ca9abc9055c9ae33c2b09f5b5b3442066895b724",
                          "typeString": "literal_string \"\"URL\":\"\""
                        },
                        "value": "\"URL\":\""
                      },
                      {
                        "baseExpression": {
                          "id": 907,
                          "name": "_urls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "2890:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 909,
                        "indexExpression": {
                          "id": 908,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "2896:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2890:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "hexValue": "22",
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2906:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        },
                        "value": "\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_63aa528e6e82a91184c57d20ca9abc9055c9ae33c2b09f5b5b3442066895b724",
                          "typeString": "literal_string \"\"URL\":\"\""
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        }
                      ],
                      "expression": {
                        "id": 904,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2862:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2862:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2862:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2838:72:4"
                },
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "mutability": "mutable",
                      "name": "bytesObject",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "2968:24:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2968:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7b",
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3025:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52",
                          "typeString": "literal_string \"{\""
                        },
                        "value": "{"
                      },
                      {
                        "id": 918,
                        "name": "bytesName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "3046:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "2c",
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3057:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        "value": ","
                      },
                      {
                        "id": 920,
                        "name": "bytesDesc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "3078:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "2c",
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3089:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        "value": ","
                      },
                      {
                        "id": 922,
                        "name": "bytesUrl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3110:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "7d",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3132:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                          "typeString": "literal_string \"}\""
                        },
                        "value": "}"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52",
                          "typeString": "literal_string \"{\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                          "typeString": "literal_string \"}\""
                        }
                      ],
                      "expression": {
                        "id": 915,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2995:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2995:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2995:150:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2968:177:4"
                },
                {
                  "assignments": [
                    927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 927,
                      "mutability": "mutable",
                      "name": "bytesMetadata",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "3255:26:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 926,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3255:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 936,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3301:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                          "typeString": "literal_string \"data:application/json;base64,\""
                        },
                        "value": "data:application/json;base64,"
                      },
                      {
                        "arguments": [
                          {
                            "id": 933,
                            "name": "bytesObject",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "3349:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 931,
                            "name": "Base64",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1172,
                            "src": "3334:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Base64_$1172_$",
                              "typeString": "type(library Base64)"
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1171,
                          "src": "3334:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (bytes memory) pure returns (string memory)"
                          }
                        },
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3334:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                          "typeString": "literal_string \"data:application/json;base64,\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 928,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "3284:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "3284:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3284:79:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3255:108:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 939,
                            "name": "bytesMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "3434:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3426:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 937,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3426:6:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3426:23:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 941,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3425:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 872,
                  "id": 942,
                  "nodeType": "Return",
                  "src": "3418:32:4"
                }
              ]
            },
            "documentation": {
              "id": 866,
              "nodeType": "StructuredDocumentation",
              "src": "2194:200:4",
              "text": " トークンIDに紐づくメタデータを取得する関数\n @param tokenId トークンID\n @return bytesMetadata メタデータを格納したJSONオブジェクト"
            },
            "functionSelector": "61eba552",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMetaData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "2420:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2419:17:4"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "2458:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2457:15:4"
            },
            "scope": 945,
            "src": "2399:1058:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 946,
        "src": "427:3032:4"
      }
    ],
    "src": "117:3342:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/NFT.sol",
    "exportedSymbols": {
      "AccessControl": [
        1847
      ],
      "AccessControlEnumerable": [
        1972
      ],
      "Address": [
        5761
      ],
      "Base64": [
        1172
      ],
      "Context": [
        5783
      ],
      "Counters": [
        5857
      ],
      "ERC165": [
        6628
      ],
      "ERC721": [
        4679
      ],
      "ERC721Burnable": [
        4843
      ],
      "ERC721Enumerable": [
        5181
      ],
      "ERC721Pausable": [
        5218
      ],
      "ERC721PresetMinterPauserAutoId": [
        5464
      ],
      "EnumerableSet": [
        8032
      ],
      "IAccessControl": [
        2045
      ],
      "IAccessControlEnumerable": [
        2070
      ],
      "IERC165": [
        6640
      ],
      "IERC721": [
        4795
      ],
      "IERC721Enumerable": [
        5249
      ],
      "IERC721Metadata": [
        5276
      ],
      "IERC721Receiver": [
        4813
      ],
      "NFT": [
        945
      ],
      "Pausable": [
        2267
      ],
      "Strings": [
        6060
      ]
    },
    "id": 946,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 755,
        "literals": [
          "solidity",
          ">",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "117:24:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
        "file": "@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
        "id": 756,
        "nodeType": "ImportDirective",
        "scope": 946,
        "sourceUnit": 5465,
        "src": "198:89:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/harukikondo/git/TruffleRinkeby/MetaCoin/contracts/common/Base64.sol",
        "file": "./common/Base64.sol",
        "id": 757,
        "nodeType": "ImportDirective",
        "scope": 946,
        "sourceUnit": 1173,
        "src": "288:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 759,
              "name": "ERC721PresetMinterPauserAutoId",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5464,
              "src": "443:30:4"
            },
            "id": 760,
            "nodeType": "InheritanceSpecifier",
            "src": "443:30:4"
          }
        ],
        "contractDependencies": [
          1847,
          1972,
          2045,
          2070,
          2267,
          4679,
          4795,
          4843,
          5181,
          5218,
          5249,
          5276,
          5464,
          5783,
          6628,
          6640
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 758,
          "nodeType": "StructuredDocumentation",
          "src": "319:107:4",
          "text": " NFTコントラクトを定義する。\n (ERC721PresetMinterPauserAutoIdを継承して実装)"
        },
        "fullyImplemented": true,
        "id": 945,
        "linearizedBaseContracts": [
          945,
          5464,
          5218,
          2267,
          4843,
          5181,
          5249,
          4679,
          5276,
          4795,
          1972,
          1847,
          6628,
          6640,
          2070,
          2045,
          5783
        ],
        "name": "NFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 762,
            "mutability": "mutable",
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "495:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 761,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "495:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 764,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "538:16:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 763,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "538:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 766,
            "mutability": "mutable",
            "name": "nftUrl",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "571:13:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 765,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "571:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 769,
            "mutability": "mutable",
            "name": "_names",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "681:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 767,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "681:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 768,
              "nodeType": "ArrayTypeName",
              "src": "681:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 772,
            "mutability": "mutable",
            "name": "_descriptions",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "710:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 770,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "710:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 771,
              "nodeType": "ArrayTypeName",
              "src": "710:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 775,
            "mutability": "mutable",
            "name": "_urls",
            "nodeType": "VariableDeclaration",
            "scope": 945,
            "src": "746:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 773,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "746:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 774,
              "nodeType": "ArrayTypeName",
              "src": "746:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "953:132:4",
              "statements": [
                {
                  "expression": {
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 790,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "1011:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 791,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "1021:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1011:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:15:4"
                },
                {
                  "expression": {
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 794,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "1036:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 795,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 780,
                      "src": "1048:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1036:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:19:4"
                },
                {
                  "expression": {
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 798,
                      "name": "nftUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "1065:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 799,
                      "name": "url_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "1074:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1065:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:13:4"
                }
              ]
            },
            "documentation": {
              "id": 776,
              "nodeType": "StructuredDocumentation",
              "src": "775:44:4",
              "text": " コンストラクター "
            },
            "id": 803,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 785,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 778,
                    "src": "931:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 786,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 780,
                    "src": "938:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 787,
                    "name": "url_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 782,
                    "src": "947:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 788,
                "modifierName": {
                  "id": 784,
                  "name": "ERC721PresetMinterPauserAutoId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5464,
                  "src": "900:30:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "900:52:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "836:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "857:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "url_",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "880:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:64:4"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:0:4"
            },
            "scope": 945,
            "src": "824:261:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 811,
              "nodeType": "Block",
              "src": "1200:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 809,
                    "name": "nftName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 762,
                    "src": "1217:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 808,
                  "id": 810,
                  "nodeType": "Return",
                  "src": "1210:14:4"
                }
              ]
            },
            "documentation": {
              "id": 804,
              "nodeType": "StructuredDocumentation",
              "src": "1091:46:4",
              "text": " NFT名を取得する関数"
            },
            "functionSelector": "3bbdbee0",
            "id": 812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1161:2:4"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "1185:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1184:15:4"
            },
            "scope": 945,
            "src": "1142:89:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 820,
              "nodeType": "Block",
              "src": "1357:33:4",
              "statements": [
                {
                  "expression": {
                    "id": 818,
                    "name": "nftSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 764,
                    "src": "1374:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 817,
                  "id": 819,
                  "nodeType": "Return",
                  "src": "1367:16:4"
                }
              ]
            },
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "1237:55:4",
              "text": " シンボル名を取得する関数"
            },
            "functionSelector": "f7b5c5b6",
            "id": 821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftSymbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:2:4"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "1342:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:15:4"
            },
            "scope": 945,
            "src": "1297:93:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "1528:31:4",
              "statements": [
                {
                  "expression": {
                    "id": 827,
                    "name": "nftUrl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 766,
                    "src": "1546:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 826,
                  "id": 828,
                  "nodeType": "Return",
                  "src": "1539:13:4"
                }
              ]
            },
            "documentation": {
              "id": 822,
              "nodeType": "StructuredDocumentation",
              "src": "1396:70:4",
              "text": " NFTに紐づけられているURLを取得する。"
            },
            "functionSelector": "b722720d",
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftURL",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1489:2:4"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "1513:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1512:15:4"
            },
            "scope": 945,
            "src": "1471:88:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "1961:227:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 845,
                        "name": "tokenName_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "2040:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 842,
                        "name": "_names",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "2028:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2028:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2028:23:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:23:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 851,
                        "name": "description_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 837,
                        "src": "2080:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 848,
                        "name": "_descriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "2061:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2061:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:33:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 857,
                        "name": "tokenUrl_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "2115:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 854,
                        "name": "_urls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "2104:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2104:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2104:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "2104:22:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 861,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "2178:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 860,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5389,
                      "src": "2173:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2173:8:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:8:4"
                }
              ]
            },
            "documentation": {
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "1569:264:4",
              "text": " アドレスに対してNFTを発行する関数\n @param to 発行先アドレス\n @param tokenName_ トークンIDに割り振られる名前\n @param description_ 説明\n @param tokenUrl_ トークンIDに紐づけるURL"
            },
            "functionSelector": "11ece751",
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "1855:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "tokenName_",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "1867:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1867:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "description_",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "1893:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "tokenUrl_",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "1921:23:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1854:91:4"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1961:0:4"
            },
            "scope": 945,
            "src": "1838:350:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "2473:984:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 875,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "2501:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 874,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4287,
                          "src": "2492:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2492:18:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f6e6578736974656e7420746f6b656e",
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2512:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edd488bf416c3ee33e713cda3c438c4b52bfc8cfee05139096c2a75f3acbc312",
                          "typeString": "literal_string \"nonexsitent token\""
                        },
                        "value": "nonexsitent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edd488bf416c3ee33e713cda3c438c4b52bfc8cfee05139096c2a75f3acbc312",
                          "typeString": "literal_string \"nonexsitent token\""
                        }
                      ],
                      "id": 873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2483:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:50:4"
                },
                {
                  "assignments": [
                    881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 881,
                      "mutability": "mutable",
                      "name": "bytesName",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "2621:22:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 880,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2621:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "226e616d65223a22",
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2663:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f",
                          "typeString": "literal_string \"\"name\":\"\""
                        },
                        "value": "\"name\":\""
                      },
                      {
                        "baseExpression": {
                          "id": 885,
                          "name": "_names",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "2675:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 887,
                        "indexExpression": {
                          "id": 886,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "2682:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2675:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "hexValue": "22",
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2692:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        },
                        "value": "\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_51367d69f1c3baff467b722249990cf2b0f92b1e50edd5a778b81ffc7191408f",
                          "typeString": "literal_string \"\"name\":\"\""
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        }
                      ],
                      "expression": {
                        "id": 882,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2646:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2646:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2621:75:4"
                },
                {
                  "assignments": [
                    892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 892,
                      "mutability": "mutable",
                      "name": "bytesDesc",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "2724:22:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 891,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2724:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 901,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "226465736372697074696f6e223a22",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2766:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7",
                          "typeString": "literal_string \"\"description\":\"\""
                        },
                        "value": "\"description\":\""
                      },
                      {
                        "baseExpression": {
                          "id": 896,
                          "name": "_descriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "2785:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 898,
                        "indexExpression": {
                          "id": 897,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "2799:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2785:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "hexValue": "22",
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2809:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        },
                        "value": "\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1f63d9db42efe217d85281c4ef6267f200cbdd8e8d6fd9a3e9d557ed86a373c7",
                          "typeString": "literal_string \"\"description\":\"\""
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        }
                      ],
                      "expression": {
                        "id": 893,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2749:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2749:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2724:89:4"
                },
                {
                  "assignments": [
                    903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 903,
                      "mutability": "mutable",
                      "name": "bytesUrl",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "2838:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 902,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2838:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 912,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "2255524c223a22",
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2879:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63aa528e6e82a91184c57d20ca9abc9055c9ae33c2b09f5b5b3442066895b724",
                          "typeString": "literal_string \"\"URL\":\"\""
                        },
                        "value": "\"URL\":\""
                      },
                      {
                        "baseExpression": {
                          "id": 907,
                          "name": "_urls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "2890:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "id": 909,
                        "indexExpression": {
                          "id": 908,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 868,
                          "src": "2896:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2890:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "hexValue": "22",
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2906:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        },
                        "value": "\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_63aa528e6e82a91184c57d20ca9abc9055c9ae33c2b09f5b5b3442066895b724",
                          "typeString": "literal_string \"\"URL\":\"\""
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        }
                      ],
                      "expression": {
                        "id": 904,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2862:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2862:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2862:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2838:72:4"
                },
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "mutability": "mutable",
                      "name": "bytesObject",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "2968:24:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2968:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7b",
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3025:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52",
                          "typeString": "literal_string \"{\""
                        },
                        "value": "{"
                      },
                      {
                        "id": 918,
                        "name": "bytesName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "3046:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "2c",
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3057:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        "value": ","
                      },
                      {
                        "id": 920,
                        "name": "bytesDesc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "3078:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "2c",
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3089:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        "value": ","
                      },
                      {
                        "id": 922,
                        "name": "bytesUrl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3110:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "7d",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3132:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                          "typeString": "literal_string \"}\""
                        },
                        "value": "}"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52",
                          "typeString": "literal_string \"{\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                          "typeString": "literal_string \",\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                          "typeString": "literal_string \"}\""
                        }
                      ],
                      "expression": {
                        "id": 915,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "2995:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "2995:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2995:150:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2968:177:4"
                },
                {
                  "assignments": [
                    927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 927,
                      "mutability": "mutable",
                      "name": "bytesMetadata",
                      "nodeType": "VariableDeclaration",
                      "scope": 943,
                      "src": "3255:26:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 926,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3255:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 936,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3301:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                          "typeString": "literal_string \"data:application/json;base64,\""
                        },
                        "value": "data:application/json;base64,"
                      },
                      {
                        "arguments": [
                          {
                            "id": 933,
                            "name": "bytesObject",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "3349:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 931,
                            "name": "Base64",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1172,
                            "src": "3334:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Base64_$1172_$",
                              "typeString": "type(library Base64)"
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1171,
                          "src": "3334:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (bytes memory) pure returns (string memory)"
                          }
                        },
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3334:28:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                          "typeString": "literal_string \"data:application/json;base64,\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 928,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "3284:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "3284:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3284:79:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3255:108:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 939,
                            "name": "bytesMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "3434:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3426:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 937,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "3426:6:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3426:23:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 941,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3425:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 872,
                  "id": 942,
                  "nodeType": "Return",
                  "src": "3418:32:4"
                }
              ]
            },
            "documentation": {
              "id": 866,
              "nodeType": "StructuredDocumentation",
              "src": "2194:200:4",
              "text": " トークンIDに紐づくメタデータを取得する関数\n @param tokenId トークンID\n @return bytesMetadata メタデータを格納したJSONオブジェクト"
            },
            "functionSelector": "61eba552",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMetaData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "2420:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2419:17:4"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "2458:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2457:15:4"
            },
            "scope": 945,
            "src": "2399:1058:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 946,
        "src": "427:3032:4"
      }
    ],
    "src": "117:3342:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2022-06-04T12:27:58.307Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getMetaData(uint256)": {
        "params": {
          "tokenId": "トークンID"
        },
        "returns": {
          "_0": "bytesMetadata メタデータを格納したJSONオブジェクト"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(address)": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "mintNft(address,string,string,string)": {
        "params": {
          "description_": "説明",
          "to": "発行先アドレス",
          "tokenName_": "トークンIDに割り振られる名前",
          "tokenUrl_": "トークンIDに紐づけるURL"
        }
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "コンストラクター "
      },
      "getMetaData(uint256)": {
        "notice": "トークンIDに紐づくメタデータを取得する関数"
      },
      "getNftName()": {
        "notice": "NFT名を取得する関数"
      },
      "getNftSymbol()": {
        "notice": "シンボル名を取得する関数"
      },
      "getNftURL()": {
        "notice": "NFTに紐づけられているURLを取得する。"
      },
      "mintNft(address,string,string,string)": {
        "notice": "アドレスに対してNFTを発行する関数"
      }
    },
    "notice": "NFTコントラクトを定義する。 (ERC721PresetMinterPauserAutoIdを継承して実装)",
    "version": 1
  }
}