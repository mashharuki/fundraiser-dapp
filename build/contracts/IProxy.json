{
  "contractName": "IProxy",
  "abi": [
    {
      "inputs": [],
      "name": "masterCopy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"masterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IProxy - Helper interface to access masterCopy of the Proxy on-chain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/proxies/GnosisSafeProxy.sol\":\"IProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/proxies/GnosisSafeProxy.sol\":{\"keccak256\":\"0xfe897a9c70ec5450691eaee64e896cc05e52deb64b3d1bc6f5f685d5661b4b1e\",\"urls\":[\"bzz-raw://83184eefe555bdab50d5c3cde31e5c44932e76e80bfe4f8ea4d3789b5f5db2f4\",\"dweb:/ipfs/QmeWVENa5Pc3DusKPxE8xhbQryPvY2YdzYyDnLkKZyuVma\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\n * コントラクトバージョンアップ用のProxyコントラクト\n */\n\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n/// @author Richard Meissner - <richard@gnosis.io>\ninterface IProxy {\n    function masterCopy() external view returns (address);\n}\n\n/**\n * Generic proxy contract allows to execute all transactions applying the code of a master contract.\n * @author Stefan George - <stefan@gnosis.io>\n * @author Richard Meissner - <richard@gnosis.io>\n */\ncontract GnosisSafeProxy {\n    // singleton always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\n    address internal singleton;\n\n    /** \n     * function sets address of singleton contract.\n     * @param _singleton Singleton address.\n     */\n    constructor(address _singleton) {\n        require(_singleton != address(0), \"Invalid singleton address provided\");\n        singleton = _singleton;\n    }\n\n    /**\n     * フォールバック関数\n     * この関数を介してSafeContractの関数を呼び出す\n     * @dev Fallback function forwards all transactions and returns all received return data.\n     */\n    fallback() external payable {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let _singleton := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n            // 0xa619486e == keccak(\"masterCopy()\"). The value is right padded to 32-bytes with 0s\n            if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) {\n                mstore(0, _singleton)\n                return(0, 0x20)\n            }\n            calldatacopy(0, 0, calldatasize())\n            // 関数呼び出し\n            let success := delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            if eq(success, 0) {\n                revert(0, returndatasize())\n            }\n            return(0, returndatasize())\n        }\n    }\n}",
  "sourcePath": "/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/proxies/GnosisSafeProxy.sol",
  "ast": {
    "absolutePath": "/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/proxies/GnosisSafeProxy.sol",
    "exportedSymbols": {
      "GnosisSafeProxy": [
        4572
      ],
      "IProxy": [
        4541
      ]
    },
    "id": 4573,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4534,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "84:31:30"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4535,
          "nodeType": "StructuredDocumentation",
          "src": "117:131:30",
          "text": "@title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": false,
        "id": 4541,
        "linearizedBaseContracts": [
          4541
        ],
        "name": "IProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a619486e",
            "id": 4540,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "masterCopy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:2:30"
            },
            "returnParameters": {
              "id": 4539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4538,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4540,
                  "src": "316:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "315:9:30"
            },
            "scope": 4541,
            "src": "271:54:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4573,
        "src": "248:79:30"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4542,
          "nodeType": "StructuredDocumentation",
          "src": "329:204:30",
          "text": " Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": true,
        "id": 4572,
        "linearizedBaseContracts": [
          4572
        ],
        "name": "GnosisSafeProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4544,
            "mutability": "mutable",
            "name": "singleton",
            "nodeType": "VariableDeclaration",
            "scope": 4572,
            "src": "820:26:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4543,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4564,
              "nodeType": "Block",
              "src": "998:120:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4551,
                          "name": "_singleton",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4547,
                          "src": "1016:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1038:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1030:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4552,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1030:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1030:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1016:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073696e676c65746f6e20616464726573732070726f7669646564",
                        "id": 4557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1042:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        },
                        "value": "Invalid singleton address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        }
                      ],
                      "id": 4550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1008:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:71:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4559,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:71:30"
                },
                {
                  "expression": {
                    "id": 4562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4560,
                      "name": "singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4544,
                      "src": "1089:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4561,
                      "name": "_singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4547,
                      "src": "1101:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1089:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4563,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:22:30"
                }
              ]
            },
            "documentation": {
              "id": 4545,
              "nodeType": "StructuredDocumentation",
              "src": "853:108:30",
              "text": " function sets address of singleton contract.\n @param _singleton Singleton address."
            },
            "id": 4565,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4547,
                  "mutability": "mutable",
                  "name": "_singleton",
                  "nodeType": "VariableDeclaration",
                  "scope": 4565,
                  "src": "978:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "977:20:30"
            },
            "returnParameters": {
              "id": 4549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:0:30"
            },
            "scope": 4572,
            "src": "966:152:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4570,
              "nodeType": "Block",
              "src": "1365:814:30",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1440:733:30",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1454:75:30",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1482:1:30",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "1476:5:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1476:8:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1486:42:30",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1472:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1472:57:30"
                        },
                        "variables": [
                          {
                            "name": "_singleton",
                            "nodeType": "YulTypedName",
                            "src": "1458:10:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1732:85:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1757:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "_singleton",
                                    "nodeType": "YulIdentifier",
                                    "src": "1760:10:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1750:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1750:21:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1750:21:30"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1795:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1798:4:30",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1788:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1788:15:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1788:15:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1660:1:30",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1647:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1647:15:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1664:66:30",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1644:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1644:87:30"
                        },
                        "nodeType": "YulIf",
                        "src": "1641:2:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1843:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1846:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1849:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1849:14:30"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1830:12:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1830:34:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1830:34:30"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1911:71:30",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1939:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1939:5:30"
                            },
                            {
                              "name": "_singleton",
                              "nodeType": "YulIdentifier",
                              "src": "1946:10:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1958:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1961:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1961:14:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1977:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1980:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1926:12:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1926:56:30"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "1915:7:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2010:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2013:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2016:14:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2016:16:30"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1995:14:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1995:38:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1995:38:30"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2064:59:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2089:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "2092:14:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2092:16:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2082:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2082:27:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2082:27:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "2052:7:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2061:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "2049:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2049:14:30"
                        },
                        "nodeType": "YulIf",
                        "src": "2046:2:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2143:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2146:14:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2146:16:30"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "2136:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2136:27:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2136:27:30"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [],
                  "id": 4569,
                  "nodeType": "InlineAssembly",
                  "src": "1431:742:30"
                }
              ]
            },
            "documentation": {
              "id": 4566,
              "nodeType": "StructuredDocumentation",
              "src": "1124:208:30",
              "text": " フォールバック関数\n この関数を介してSafeContractの関数を呼び出す\n @dev Fallback function forwards all transactions and returns all received return data."
            },
            "id": 4571,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:2:30"
            },
            "returnParameters": {
              "id": 4568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:30"
            },
            "scope": 4572,
            "src": "1337:842:30",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4573,
        "src": "534:1647:30"
      }
    ],
    "src": "84:2097:30"
  },
  "legacyAST": {
    "absolutePath": "/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/proxies/GnosisSafeProxy.sol",
    "exportedSymbols": {
      "GnosisSafeProxy": [
        4572
      ],
      "IProxy": [
        4541
      ]
    },
    "id": 4573,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4534,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "84:31:30"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4535,
          "nodeType": "StructuredDocumentation",
          "src": "117:131:30",
          "text": "@title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": false,
        "id": 4541,
        "linearizedBaseContracts": [
          4541
        ],
        "name": "IProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a619486e",
            "id": 4540,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "masterCopy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:2:30"
            },
            "returnParameters": {
              "id": 4539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4538,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4540,
                  "src": "316:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "315:9:30"
            },
            "scope": 4541,
            "src": "271:54:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4573,
        "src": "248:79:30"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4542,
          "nodeType": "StructuredDocumentation",
          "src": "329:204:30",
          "text": " Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": true,
        "id": 4572,
        "linearizedBaseContracts": [
          4572
        ],
        "name": "GnosisSafeProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4544,
            "mutability": "mutable",
            "name": "singleton",
            "nodeType": "VariableDeclaration",
            "scope": 4572,
            "src": "820:26:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4543,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4564,
              "nodeType": "Block",
              "src": "998:120:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4551,
                          "name": "_singleton",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4547,
                          "src": "1016:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1038:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1030:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4552,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1030:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1030:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1016:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073696e676c65746f6e20616464726573732070726f7669646564",
                        "id": 4557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1042:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        },
                        "value": "Invalid singleton address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        }
                      ],
                      "id": 4550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1008:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:71:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4559,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:71:30"
                },
                {
                  "expression": {
                    "id": 4562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4560,
                      "name": "singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4544,
                      "src": "1089:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4561,
                      "name": "_singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4547,
                      "src": "1101:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1089:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4563,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:22:30"
                }
              ]
            },
            "documentation": {
              "id": 4545,
              "nodeType": "StructuredDocumentation",
              "src": "853:108:30",
              "text": " function sets address of singleton contract.\n @param _singleton Singleton address."
            },
            "id": 4565,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4547,
                  "mutability": "mutable",
                  "name": "_singleton",
                  "nodeType": "VariableDeclaration",
                  "scope": 4565,
                  "src": "978:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "977:20:30"
            },
            "returnParameters": {
              "id": 4549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:0:30"
            },
            "scope": 4572,
            "src": "966:152:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4570,
              "nodeType": "Block",
              "src": "1365:814:30",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1440:733:30",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1454:75:30",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1482:1:30",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "1476:5:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1476:8:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1486:42:30",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1472:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1472:57:30"
                        },
                        "variables": [
                          {
                            "name": "_singleton",
                            "nodeType": "YulTypedName",
                            "src": "1458:10:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1732:85:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1757:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "_singleton",
                                    "nodeType": "YulIdentifier",
                                    "src": "1760:10:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1750:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1750:21:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1750:21:30"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1795:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1798:4:30",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1788:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1788:15:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1788:15:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1660:1:30",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1647:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1647:15:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1664:66:30",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1644:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1644:87:30"
                        },
                        "nodeType": "YulIf",
                        "src": "1641:2:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1843:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1846:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1849:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1849:14:30"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1830:12:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1830:34:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1830:34:30"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1911:71:30",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1939:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1939:5:30"
                            },
                            {
                              "name": "_singleton",
                              "nodeType": "YulIdentifier",
                              "src": "1946:10:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1958:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1961:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1961:14:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1977:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1980:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1926:12:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1926:56:30"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "1915:7:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2010:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2013:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2016:14:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2016:16:30"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1995:14:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1995:38:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1995:38:30"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2064:59:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2089:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "2092:14:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2092:16:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2082:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2082:27:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2082:27:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "2052:7:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2061:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "2049:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2049:14:30"
                        },
                        "nodeType": "YulIf",
                        "src": "2046:2:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2143:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2146:14:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2146:16:30"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "2136:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2136:27:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2136:27:30"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [],
                  "id": 4569,
                  "nodeType": "InlineAssembly",
                  "src": "1431:742:30"
                }
              ]
            },
            "documentation": {
              "id": 4566,
              "nodeType": "StructuredDocumentation",
              "src": "1124:208:30",
              "text": " フォールバック関数\n この関数を介してSafeContractの関数を呼び出す\n @dev Fallback function forwards all transactions and returns all received return data."
            },
            "id": 4571,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:2:30"
            },
            "returnParameters": {
              "id": 4568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:30"
            },
            "scope": 4572,
            "src": "1337:842:30",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4573,
        "src": "534:1647:30"
      }
    ],
    "src": "84:2097:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2022-06-04T09:30:29.993Z",
  "devdoc": {
    "author": "Richard Meissner - <richard@gnosis.io>",
    "kind": "dev",
    "methods": {},
    "title": "IProxy - Helper interface to access masterCopy of the Proxy on-chain",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}