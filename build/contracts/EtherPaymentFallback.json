{
  "contractName": "EtherPaymentFallback",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SafeReceived",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeReceived\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.pm>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EtherPaymentFallback - A contract that has a fallback to accept ether payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"EtherPaymentFallback\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/common/EtherPaymentFallback.sol\":\"EtherPaymentFallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0x0f646d8c92fec88c0ae58a9e87554605cd6133ecb089e4a19112dfa3ac81cf25\",\"urls\":[\"bzz-raw://b66f6de8f811260cdea4086cc330b4329099e71fc8eeb8874a6cb52996b6a51f\",\"dweb:/ipfs/QmP2ZxYjUETWFrmLUEsRN4ApL5LWHGbjLWjRTJ8TDaw3Bc\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50608d8061001e6000396000f3fe608060405236604957336001600160a01b03167f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d34604051603f9190604e565b60405180910390a2005b600080fd5b9081526020019056fea2646970667358221220c72210a231735e7bb89f2ab72e952d8bd0b5a8319e2a4526c2d91bf421da1e2164736f6c63430008000033",
  "deployedBytecode": "0x608060405236604957336001600160a01b03167f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d34604051603f9190604e565b60405180910390a2005b600080fd5b9081526020019056fea2646970667358221220c72210a231735e7bb89f2ab72e952d8bd0b5a8319e2a4526c2d91bf421da1e2164736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "283:317:21:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "283:317:21:-:0;;;;;;569:10;-1:-1:-1;;;;;556:35:21;;581:9;556:35;;;;;;:::i;:::-;;;;;;;;283:317;;;;;14:177:72;160:25;;;148:2;133:18;;115:76::o",
  "source": "/**\n * 資産を入金するためのコントラクト\n */\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * EtherPaymentFallbackコントラクト\n * @title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n * @author Richard Meissner - <richard@gnosis.pm>\n */\ncontract EtherPaymentFallback {\n    // 入金したときのイベント定義\n    event SafeReceived(address indexed sender, uint256 value);\n\n    /**\n     * フォールバック関数\n     */\n    receive() external payable {\n        // イベントの発行\n        emit SafeReceived(msg.sender, msg.value);\n    }\n}",
  "sourcePath": "/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/common/EtherPaymentFallback.sol",
  "ast": {
    "absolutePath": "/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/common/EtherPaymentFallback.sol",
    "exportedSymbols": {
      "EtherPaymentFallback": [
        4263
      ]
    },
    "id": 4264,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4243,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:31:21"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4244,
          "nodeType": "StructuredDocumentation",
          "src": "94:188:21",
          "text": " EtherPaymentFallbackコントラクト\n @title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n @author Richard Meissner - <richard@gnosis.pm>"
        },
        "fullyImplemented": true,
        "id": 4263,
        "linearizedBaseContracts": [
          4263
        ],
        "name": "EtherPaymentFallback",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 4250,
            "name": "SafeReceived",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4246,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "385:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4248,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "409:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:39:21"
            },
            "src": "366:58:21"
          },
          {
            "body": {
              "id": 4261,
              "nodeType": "Block",
              "src": "508:90:21",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4255,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "569:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "569:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "581:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "581:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4254,
                      "name": "SafeReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4250,
                      "src": "556:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:35:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4260,
                  "nodeType": "EmitStatement",
                  "src": "551:40:21"
                }
              ]
            },
            "documentation": {
              "id": 4251,
              "nodeType": "StructuredDocumentation",
              "src": "430:46:21",
              "text": " フォールバック関数"
            },
            "id": 4262,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:2:21"
            },
            "returnParameters": {
              "id": 4253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:21"
            },
            "scope": 4263,
            "src": "481:117:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4264,
        "src": "283:317:21"
      }
    ],
    "src": "61:539:21"
  },
  "legacyAST": {
    "absolutePath": "/Users/harukikondo/git/fundraiser-dapp/contracts/safeContracts/common/EtherPaymentFallback.sol",
    "exportedSymbols": {
      "EtherPaymentFallback": [
        4263
      ]
    },
    "id": 4264,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4243,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:31:21"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4244,
          "nodeType": "StructuredDocumentation",
          "src": "94:188:21",
          "text": " EtherPaymentFallbackコントラクト\n @title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n @author Richard Meissner - <richard@gnosis.pm>"
        },
        "fullyImplemented": true,
        "id": 4263,
        "linearizedBaseContracts": [
          4263
        ],
        "name": "EtherPaymentFallback",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 4250,
            "name": "SafeReceived",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4246,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "385:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4248,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "409:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:39:21"
            },
            "src": "366:58:21"
          },
          {
            "body": {
              "id": 4261,
              "nodeType": "Block",
              "src": "508:90:21",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4255,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "569:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "569:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "581:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "581:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4254,
                      "name": "SafeReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4250,
                      "src": "556:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:35:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4260,
                  "nodeType": "EmitStatement",
                  "src": "551:40:21"
                }
              ]
            },
            "documentation": {
              "id": 4251,
              "nodeType": "StructuredDocumentation",
              "src": "430:46:21",
              "text": " フォールバック関数"
            },
            "id": 4262,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:2:21"
            },
            "returnParameters": {
              "id": 4253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:21"
            },
            "scope": 4263,
            "src": "481:117:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4264,
        "src": "283:317:21"
      }
    ],
    "src": "61:539:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2022-06-04T09:30:29.985Z",
  "devdoc": {
    "author": "Richard Meissner - <richard@gnosis.pm>",
    "kind": "dev",
    "methods": {},
    "title": "EtherPaymentFallback - A contract that has a fallback to accept ether payments",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "EtherPaymentFallbackコントラクト",
    "version": 1
  }
}